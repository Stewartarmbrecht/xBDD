{"Areas":[{"Features":[{"ClassName":"xBDD.Features.GenerateReports.GenerateTextReport.WriteToText","Name":"Write To Text","Scenarios":[{"MethodName":"WriteEmtpyTestRun","Name":"Write Emtpy Test Run","Outcome":2,"Reason":"Failed Step","Sort":1,"Steps":[{"EndTime":"\/Date(1534748660342-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class EmptyTestRun : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660340-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660358-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660348-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660359-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660358-0500)\/"}]},{"MethodName":"WriteSkippedEmptyScenario","Name":"Write Skipped Empty Scenario","Outcome":2,"Reason":"Failed Step","Sort":2,"Steps":[{"EndTime":"\/Date(1534748660425-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class SkippedEmptyScenario : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n\t    \t\t\t.Skip(\"Deferred\", reason => { } );\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660424-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660432-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660425-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660433-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660432-0500)\/"}]},{"MethodName":"WriteRunEmptyScenario","Name":"Write Run Empty Scenario","Outcome":2,"Reason":"Failed Step","Sort":3,"Steps":[{"EndTime":"\/Date(1534748660436-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunEmptyScenario : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            await xBDD.CurrentRun\n                .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                .Run();\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660436-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660438-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660436-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660438-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660438-0500)\/"}]},{"MethodName":"WriteSkippedScenarioWithSteps","Name":"Write Skipped Scenario With Steps","Outcome":2,"Reason":"Failed Step","Sort":4,"Steps":[{"EndTime":"\/Date(1534748660456-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class SkippedScenarioWithSteps : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Skip(\"Deferred\", reason => { } );\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660450-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660459-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660456-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660459-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660459-0500)\/"}]},{"MethodName":"WriteRunScenarioWithSteps","Name":"Write Run Scenario With Steps","Outcome":2,"Reason":"Failed Step","Sort":5,"Steps":[{"EndTime":"\/Date(1534748660462-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunScenarioWithSteps : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660462-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660464-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660462-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660464-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660464-0500)\/"}]},{"MethodName":"WriteRunScenarioWithSkippedStep","Name":"Write Run Scenario With Skipped Step","Outcome":2,"Reason":"Failed Step","Sort":6,"Steps":[{"EndTime":"\/Date(1534748660467-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunScenarioWithSkippedStep : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\", (s) => { throw new SkipStepException(\"Deferred\"); }))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660467-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660470-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660467-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660470-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660470-0500)\/"}]},{"MethodName":"WriteRunScenarioWithNotImplementedStep","Name":"Write Run Scenario With Not Implemented Step","Outcome":2,"Reason":"Failed Step","Sort":7,"Steps":[{"EndTime":"\/Date(1534748660473-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System;\nusing System.Threading.Tasks;\nusing xBDD.Features;\n\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunScenarioWithNotImplementedStep : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\", (s) => { throw new NotImplementedException(); }))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660473-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660475-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660473-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660476-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660475-0500)\/"}]},{"MethodName":"WriteRunScenarioWithFailedStep","Name":"Write Run Scenario With Failed Step","Outcome":2,"Reason":"Failed Step","Sort":8,"Steps":[{"EndTime":"\/Date(1534748660479-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System;\nusing System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunScenarioWithFailedStep : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\", (s) => { throw new Exception(\"My Error\"); }))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660478-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660490-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660479-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660490-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660490-0500)\/"}]},{"MethodName":"WriteRunMultipleScenariosSameFeature","Name":"Write Run Multiple Scenarios Same Feature","Outcome":2,"Reason":"Failed Step","Sort":9,"Steps":[{"EndTime":"\/Date(1534748660499-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunMultipleScenariosSameFeature : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario One\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario Two\", \"My Feature\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660494-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660501-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660499-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660502-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660501-0500)\/"}]},{"MethodName":"WriteRunMultipleFeaturesSameArea","Name":"Write Run Multiple Features Same Area","Outcome":2,"Reason":"Failed Step","Sort":10,"Steps":[{"EndTime":"\/Date(1534748660573-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunMultipleFeaturesSameArea : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario One\", \"My Feature One\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario Two\", \"My Feature One\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario One\", \"My Feature Two\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario Two\", \"My Feature Two\", \"My.Area.Path\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660573-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660576-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660573-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660577-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660576-0500)\/"}]},{"MethodName":"WriteRunMultipleAreas","Name":"Write Run Multiple Areas","Outcome":2,"Reason":"Failed Step","Sort":11,"Steps":[{"EndTime":"\/Date(1534748660580-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunMultipleAreas : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            try\n            {\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario One\", \"My Feature One\", \"My.Area.Path.One\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario Two\", \"My Feature One\", \"My.Area.Path.One\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario One\", \"My Feature Two\", \"My.Area.Path.Two\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n                await xBDD.CurrentRun\n                    .AddScenario(\"My Scenario Two\", \"My Feature Two\", \"My.Area.Path.Two\")\n                    .Given(xBDD.CreateStep(\"my starting condition\"))\n                    .When(xBDD.CreateStep(\"my action\"))\n                    .Then(xBDD.CreateStep(\"my ending condition\"))\n                    .Run();\n            }\n            catch { }\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660580-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660584-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660580-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660585-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660584-0500)\/"}]},{"MethodName":"WriteRunScenarioWithStepWithMultilineParameter","Name":"Write Run Scenario With Step With Multiline Parameter","Outcome":2,"Reason":"Failed Step","Sort":12,"Steps":[{"EndTime":"\/Date(1534748660589-0500)\/","MultilineParameter":"","Name":"you have a similar class in your test project :","Outcome":1,"Output":"using System.Threading.Tasks;\nusing xBDD.Features;\nnamespace xBDD.Features.GenerateReports.GenerateTextReport.WriteToTextScenarios\n{\n    public class RunScenarioWithStepWithMultilineParameter : IExecute<string>\n    {\n        public async Task<string> Execute()\n        {\n            var xBDD = new xBDDMock();\n            xBDD.CurrentRun.TestRun.Name = \"My Test Run\";\n            await xBDD.CurrentRun\n                .AddScenario(\"My Scenario\", \"My Feature\", \"My.Area.Path\")\n                .Given(xBDD.CreateStep(\"my starting condition with the following\", (s) => { }, $\"My{System.Environment.NewLine}multiline{System.Environment.NewLine}parameter\"))\n                .When(xBDD.CreateStep(\"my action\"))\n                .Then(xBDD.CreateStep(\"my ending condition\"))\n                .Run();\n            return await xBDD.CurrentRun.TestRun.WriteToText();\n        }\n    }\n}\n","OutputFormat":6,"StartTime":"\/Date(1534748660589-0500)\/"},{"ActionType":1,"EndTime":"\/Date(1534748660592-0500)\/","MultilineParameter":"","Name":"you execute the scenario","Outcome":1,"StartTime":"\/Date(1534748660589-0500)\/"},{"ActionType":2,"EndTime":"\/Date(1534748660592-0500)\/","MultilineParameter":"","Name":"you will see the output matches this template (See TemplateValidator project on Nuget):","Outcome":2,"Output":"","Reason":"Access to the path '\/Users\/stewartarmbrecht\/Source\/xBDD\/xBDD.Features\/' is denied.","StartTime":"\/Date(1534748660592-0500)\/"}]}],"Sort":1}],"Name":"xBDD - Features - Generate Reports - Generate Text Report"}],"Name":"xBDD Features"}