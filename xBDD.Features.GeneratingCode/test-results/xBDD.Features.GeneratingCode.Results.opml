<?xml version="1.0"?>
<opml version="2.0">
<head>
</head>
<body>

<outline text="xBDD - Features - Generating Code - Generating Project Files [Failed]">
	<outline text="For An MS Test Project [Failed]">
		<outline text="In An Empty Directory [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/MyGeneratedSample.Features.csproj' that matches the template:">
				<outline text="<Project Sdk="Microsoft.NET.Sdk">" />
				<outline text="" />
				<outline text="	<PropertyGroup>" />
				<outline text="		<TargetFramework>netcoreapp2.1</TargetFramework>" />
				<outline text="		<IsPackable>false</IsPackable>" />
				<outline text="	</PropertyGroup>" />
				<outline text="" />
				<outline text="	<ItemGroup>" />
				<outline text="		<PackageReference Include="Microsoft.Extensions.Configuration" Version="2.1.1" />" />
				<outline text="		<PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="2.1.1" />" />
				<outline text="		<PackageReference Include="Microsoft.Net.Test.Sdk" Version="15.8.0" />" />
				<outline text="		<PackageReference Include="MSTEst.TestAdapter" Version="1.3.2" />" />
				<outline text="		<PackageReference Include="MSTEst.TestFramework" Version="1.3.2" />" />
				<outline text="		<PackageReference Include="Selenium.WebDriver.ChromeDriver" Version="2.41.0" />" />
				<outline text="		<PackageReference Include="Selenium.WebDriver" Version="3.14.0" />" />
				<outline text="		<PackageReference Include="xBDD" Version="0.0.8-alpha" />" />
				<outline text="	</ItemGroup>" />
				<outline text="" />
				<outline text="	<ItemGroup>" />
				<outline text="		<None Update="xBDDConfig.json" CopyToOutputDirectory="PreserveNewest" />" />
				<outline text="	</ItemGroup>" />
				<outline text="" />
				<outline text="</Project>" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/MyGeneratedSample.Features.csproj.xbdd' that matches the template:">
				<outline text="<Project Sdk="Microsoft.NET.Sdk">" />
				<outline text="" />
				<outline text="	<PropertyGroup>" />
				<outline text="		<TargetFramework>netcoreapp2.1</TargetFramework>" />
				<outline text="		<IsPackable>false</IsPackable>" />
				<outline text="	</PropertyGroup>" />
				<outline text="" />
				<outline text="	<ItemGroup>" />
				<outline text="		<PackageReference Include="Microsoft.Extensions.Configuration" Version="2.1.1" />" />
				<outline text="		<PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="2.1.1" />" />
				<outline text="		<PackageReference Include="Microsoft.Net.Test.Sdk" Version="15.8.0" />" />
				<outline text="		<PackageReference Include="MSTEst.TestAdapter" Version="1.3.2" />" />
				<outline text="		<PackageReference Include="MSTEst.TestFramework" Version="1.3.2" />" />
				<outline text="		<PackageReference Include="Selenium.WebDriver.ChromeDriver" Version="2.41.0" />" />
				<outline text="		<PackageReference Include="Selenium.WebDriver" Version="3.14.0" />" />
				<outline text="		<PackageReference Include="xBDD" Version="0.0.8-alpha" />" />
				<outline text="	</ItemGroup>" />
				<outline text="" />
				<outline text="	<ItemGroup>" />
				<outline text="		<None Update="xBDDConfig.json" CopyToOutputDirectory="PreserveNewest" />" />
				<outline text="	</ItemGroup>" />
				<outline text="" />
				<outline text="</Project>" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDConfig.json' that matches the template:">
				<outline text="{" />
				<outline text="	"TestRunReport": {" />
				<outline text="		"ReportName": "My Generated Sample - Features"," />
				<outline text="		"ReportFolder": "/../../../test-results/"," />
				<outline text="		"FileName": "MyGeneratedSample.Features.Results"," />
				<outline text="		"FailuresOnly": "false"," />
				<outline text="		"RootNameSkip": "My Generated Sample - Features - "" />
				<outline text="	}," />
				<outline text="	"SortedReasonConfigurations": [" />
				<outline text="		{"Reason": "Removing","BackgroundColor": "rgb(124,124,124)","FontColor": "White"}," />
				<outline text="		{"Reason": "Passed","BackgroundColor": "rgb(112,173,71)","FontColor": "White"}," />
				<outline text="		{"Reason": "Untested","BackgroundColor": "rgb(195,155,225)","FontColor": "rgb(15, 1, 26)"}," />
				<outline text="		{"Reason": "Committed","BackgroundColor": "rgb(46,117,182)","FontColor": "White"}," />
				<outline text="		{"Reason": "Ready","BackgroundColor": "rgb(101, 167, 227)","FontColor": "rgb(2, 20, 36)"}," />
				<outline text="		{"Reason": "Defining","BackgroundColor": "rgb(146, 194, 238)","FontColor": "rgb(7, 36, 63)"}," />
				<outline text="		{"Reason": "Failed","BackgroundColor": "rgb(192,0,0)","FontColor": "White"}" />
				<outline text="	]," />
				<outline text="	"Browser": {" />
				<outline text="		"Watch": "false"" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDFeatureBase.xbdd.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features" />
				<outline text="{" />
				<outline text="	using xBDD;" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting.Logging;" />
				<outline text="" />
				<outline text="" />
				<outline text="	public partial class xBDDFeatureBase: IFeature, IOutputWriter" />
				<outline text="	{" />
				<outline text="		public IOutputWriter OutputWriter { get { return this; } }" />
				<outline text="" />
				<outline text="		public void WriteLine(string text) {" />
				<outline text="			text = text.Replace("{", "{{").Replace("}","}}");" />
				<outline text="			Logger.LogMessage(text);" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDFeatureImport.txt' that matches the template:">
				<outline text="MyImportedCapability1" />
				<outline text="	MyImportedFeature" />
				<outline text="		MyImportedScenario #R-Ready" />
				<outline text="			Given you have the xbdd tools installed" />
				<outline text="			And you have an xBDDFeatureImport.txt file defined in the root of the project" />
				<outline text="			When you execute 'dotnet xbdd project generate MSTest'" />
				<outline text="			Then a new feature will be defined in the project with two partial class files" />
				<outline text="			And you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file" />
				<outline text="			And you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDInitializeAndComplete.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting.Logging;" />
				<outline text="	using xBDD;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public class TestSetupAndBreakdown" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[AssemblyInitialize]" />
				<outline text="		public static void TestRunStart(TestContext context)" />
				<outline text="		{" />
				<outline text="			xB.Initialize();" />
				<outline text="		}" />
				<outline text="		[AssemblyCleanup()]" />
				<outline text="		public static void TestRunComplete()" />
				<outline text="		{" />
				<outline text="			xB.Complete("xBDDConfig.json", new xBDDSorting().GetSortedFeatureNames(), (message) => { Logger.LogMessage(message); });" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDSorting.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features" />
				<outline text="{" />
				<outline text="	using System;" />
				<outline text="	using System.Collections.Generic;" />
				<outline text="	using xBDD;" />
				<outline text="" />
				<outline text="	public partial class xBDDSorting: ISorting" />
				<outline text="	{" />
				<outline text="		public List<string> GetSortedFeatureNames() {" />
				<outline text="			return new List<string>() {" />
				<outline text="				typeof(MyGeneratedSample.Features.MyCapability.MyFeature).FullName," />
				<outline text="			};" />
				<outline text="		}" />
				<outline text="		public List<string> GetSortedReasons() {" />
				<outline text="			return new List<string>() {" />
				<outline text="				"Removing"," />
				<outline text="				"Untested"," />
				<outline text="				"Committed"," />
				<outline text="				"Ready"," />
				<outline text="				"Defining"," />
				<outline text="			};" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDSorting.xbdd.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features" />
				<outline text="{" />
				<outline text="	using System;" />
				<outline text="	using System.Collections.Generic;" />
				<outline text="	using xBDD;" />
				<outline text="" />
				<outline text="	public partial class xBDDSorting: ISorting" />
				<outline text="	{" />
				<outline text="		public List<string> GetGeneratedSortedFeatureNames() {" />
				<outline text="			return new List<string>() {" />
				<outline text="				typeof(MyGeneratedSample.Features.MyCapability.MyFeature).FullName," />
				<outline text="			};" />
				<outline text="		}" />
				<outline text="		public List<string> GetGeneratedReasons() {" />
				<outline text="			return new List<string>() {" />
				<outline text="				"Removing"," />
				<outline text="				"Untested"," />
				<outline text="				"Committed"," />
				<outline text="				"Ready"," />
				<outline text="				"Defining"," />
				<outline text="			};" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/Features/MyCapability/MyFeature.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[AsA("sample user")]" />
				<outline text="	[YouCan("execute my feature")]" />
				<outline text="	[SoThat("you have my feature value")]" />
				<outline text="	[Explanation(@"" />
				<outline text="		# My Explanation" />
				<outline text="		This is a" />
				<outline text="		multiline explanation of the feature." />
				<outline text="		**And it uses markdown!**")]" />
				<outline text="	public partial class MyFeature: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		[Explanation("This is an explanation of the scenario.")]" />
				<outline text="		public async Task MyScenario()" />
				<outline text="		{" />
				<outline text="			await xB.CurrentRun.AddScenario(this, 1)" />
				<outline text="				.Given("my step 1", (s) => { " />
				<outline text="" />
				<outline text="					//Add code to perform action." />
				<outline text="" />
				<outline text="				})" />
				<outline text="				.When("my step 2 with multiline input", (s) => { " />
				<outline text="" />
				<outline text="					//Add code to perform action." />
				<outline text="" />
				<outline text="					}, @"" />
				<outline text="						Here " />
				<outline text="						is " />
				<outline text="						my " />
				<outline text="						Input!".RemoveIndentation(6, true), TextFormat.text" />
				<outline text="				)" />
				<outline text="				.And("my step 3 with an explanation", (s) => { " />
				<outline text="" />
				<outline text="					//Add code to perform action." />
				<outline text="" />
				<outline text="					}, null, TextFormat.text, @"" />
				<outline text="						# Step 3 Explanation " />
				<outline text="						This is a multiline explanation of " />
				<outline text="						Step 3.  It uses markdown.  It will" />
				<outline text="						be printed out along with the step name in the" />
				<outline text="						html report."" />
				<outline text="				)" />
				<outline text="				.Then("my step 3 with output", (s) => { " />
				<outline text="" />
				<outline text="					//Add code to perform action." />
				<outline text="" />
				<outline text="					s.Output = "Here is my output.";" />
				<outline text="					s.OutputFormat = TextFormat.text;" />
				<outline text="" />
				<outline text="				})" />
				<outline text="				.Run();" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find the project execute tests with the 'dotnet test' command">
				<outline text="dotnet test" />
			</outline>
			<outline text="And you will find an HTML Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.html'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.html" />
			</outline>
			<outline text="And you will find a JSON Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.json'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.json" />
			</outline>
			<outline text="And you will find a Text Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.txt'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.txt" />
			</outline>
			<outline text="And you will find a Text Outline Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.Outline.txt'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.Outline.txt" />
			</outline>
			<outline text="And you will find a OPML Outline Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.opml'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.opml" />
			</outline>
		</outline>
		<outline text="In An Initialized XBDD [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="And you modify all the standard project files">
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj," />
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj.xbdd," />
				<outline text="MyGeneratedSample.Features/xBddFeatureBase.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddConfig.json," />
				<outline text="MyGeneratedSample.Features/xBddFeatureImport.txt," />
				<outline text="MyGeneratedSample.Features/xBddInitializeAndComplete.cs," />
				<outline text="MyGeneratedSample.Features/Features/MyCapability/MyFeature.cs" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find the files ending in xbdd.[ext] or xbdd are overwritten">
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj," />
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj.xbdd," />
				<outline text="MyGeneratedSample.Features/xBddFeatureBase.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddConfig.json," />
				<outline text="MyGeneratedSample.Features/xBddFeatureImport.txt," />
				<outline text="MyGeneratedSample.Features/xBddInitializeAndComplete.cs," />
				<outline text="MyGeneratedSample.Features/Features/MyCapability/MyFeature.cs" />
			</outline>
			<outline text="And you will find the files not ending in xbdd.[ext] or xbdd are not overwritten">
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj," />
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj.xbdd," />
				<outline text="MyGeneratedSample.Features/xBddFeatureBase.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddConfig.json," />
				<outline text="MyGeneratedSample.Features/xBddFeatureImport.txt," />
				<outline text="MyGeneratedSample.Features/xBddInitializeAndComplete.cs," />
				<outline text="MyGeneratedSample.Features/Features/MyCapability/MyFeature.cs" />
			</outline>
			<outline text="And you will find the sample feature file is not modified because the xbdd backlog file already exists">
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj," />
				<outline text="MyGeneratedSample.Features/MyGeneratedSample.Features.csproj.xbdd," />
				<outline text="MyGeneratedSample.Features/xBddFeatureBase.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.cs," />
				<outline text="MyGeneratedSample.Features/xBddSorting.xbdd.cs," />
				<outline text="MyGeneratedSample.Features/xBddConfig.json," />
				<outline text="MyGeneratedSample.Features/xBddFeatureImport.txt," />
				<outline text="MyGeneratedSample.Features/xBddInitializeAndComplete.cs," />
				<outline text="MyGeneratedSample.Features/Features/MyCapability/MyFeature.cs" />
			</outline>
			<outline text="And you will find the project execute tests with the 'dotnet test' command">
				<outline text="dotnet test" />
			</outline>
			<outline text="And you will find an HTML Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.html'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.html" />
			</outline>
			<outline text="And you will find a JSON Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.json'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.json" />
			</outline>
			<outline text="And you will find a Text Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.txt'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.txt" />
			</outline>
			<outline text="And you will find a Text Outline Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.Outline.txt'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.Outline.txt" />
			</outline>
			<outline text="And you will find a OPML Outline Report file located at './MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.opml'.">
				<outline text="./MyGeneratedSample.Features/test-results/MyGeneratedSample.Features.Results.opml" />
			</outline>
		</outline>
		<outline text="With A Test Run Name [Failed]">
			<outline text="Given you have an empty directory"/>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest --testrun-name My Sample Test Run" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDConfig.json' that matches the template:">
				<outline text="{" />
				<outline text="	"xBDD": {" />
				<outline text="		"TestRunName": "My Sample Test Run"," />
				<outline text="		"Browser": {" />
				<outline text="			"Watch": "false"" />
				<outline text="		}," />
				<outline text="		"HtmlReport": {" />
				<outline text="			"RemoveFromCapabilityNameStart": "My Generated Sample - Features - "," />
				<outline text="			"FailuresOnly": "false"" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Capability Name Clipping [Failed]">
			<outline text="Given you have an empty directory"/>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest --remove-from-capability-name Modified" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/xBDDConfig.json' that matches the template:">
				<outline text="{" />
				<outline text="	"xBDD": {" />
				<outline text="		"TestRunName": "My Generated Sample - Features"," />
				<outline text="		"Browser": {" />
				<outline text="			"Watch": "false"" />
				<outline text="		}," />
				<outline text="		"HtmlReport": {" />
				<outline text="			"RemoveFromCapabilityNameStart": "Modified"," />
				<outline text="			"FailuresOnly": "false"" />
				<outline text="		}" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
	</outline>
</outline>
<outline text="xBDD - Features - Generating Code - Generating Feature Files - Using An Xbdd Feature Import File [Failed]">
	<outline text="With An Invalid Outline [Passed]">
		<outline text="With Invalid Characters In Capability Name [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My $%^& Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1 #R-Committed @Stewart #T-LoveIT" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1 #R-Committed @Jane #T-HateIT" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An capability is defined with invalid characters in the name." />
				<outline text="Line 1: 'My Capability 1 - My $%^& Sub Capability 1'" />
				<outline text="Explanation: An capability name must start with a letter and can only contain" />
				<outline text="             letters, numbers, spaces, underscores, and ' - '." />
				<outline text="             The ' - ' string is converted to '.' to define the features " />
				<outline text="             namespace in the test project." />
			</outline>
		</outline>
		<outline text="With Invalid Characters In Feature Name [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My $%^& Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: A feature is defined with invalid characters in the name." />
				<outline text="Line 6: 'My $%^& Feature 1'" />
				<outline text="Explanation: A feature name must start with a letter and can only contain" />
				<outline text="             letters, numbers, spaces, and underscores." />
			</outline>
		</outline>
		<outline text="With Invalid Characters In Scenario Name [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1 #R-Committed @Stewart #T-LoveIT" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My $%^& Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: A scenario is defined with invalid characters in the name." />
				<outline text="Line 15: 'My $%^& Scenario 1'" />
				<outline text="Explanation: A scenario name must start with a letter and can only contain" />
				<outline text="             letters, numbers, spaces, and underscores." />
			</outline>
		</outline>
		<outline text="With Empty Feature Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1 #R-Committed @Stewart #T-LoveIT" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: Line 6: A feature is defined with no name." />
			</outline>
		</outline>
		<outline text="With Empty Scenario Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: Line 15: A scenario is defined with no name." />
			</outline>
		</outline>
		<outline text="With Empty Step Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="					Here is my " />
				<outline text="					step input" />
				<outline text="			When step 2" />
				<outline text="			" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: Line 27: A step is defined with no name." />
			</outline>
		</outline>
		<outline text="With Step Input Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a step input header." />
				<outline text="Line 23: ''" />
				<outline text="Explanation: A step input header line can only be followed by an indented input line." />
			</outline>
		</outline>
		<outline text="With Step Explanation Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a step explanation header." />
				<outline text="Line 20: ''" />
				<outline text="Explanation: A step explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Scenario Explanation Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following an scenario explanation header line." />
				<outline text="Line 16: ''" />
				<outline text="Explanation: A scenario explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Feature Explanation On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a feature explanation line." />
				<outline text="Line 13: ''" />
				<outline text="Explanation: A Feature explanation line can only be followed by another explanation " />
				<outline text="             line, a feature statement header line or an outdented (2x) scenario line." />
			</outline>
		</outline>
		<outline text="With Feature Explanation Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a feature explanation header line." />
				<outline text="Line 11: ''" />
				<outline text="Explanation: A feature explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Feature Statement On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a feature Statement line." />
				<outline text="Line 10: ''" />
				<outline text="Explanation: A feature statement line can only be followed by another statement line, " />
				<outline text="             a feature explanation header line or an outdented (2x) scenario line." />
			</outline>
		</outline>
		<outline text="With Feature Statement Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following a feature statement header line." />
				<outline text="Line 7: ''" />
				<outline text="Explanation: A feature statement header line can only be followed by an indented " />
				<outline text="             statement line." />
			</outline>
		</outline>
		<outline text="With Feature On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' following a feature line." />
				<outline text="Line 6: ''" />
				<outline text="Explanation: A feature line can only be followed by an indented scenario name, indented" />
				<outline text="             'Explanation' header or indented 'Statement' header." />
			</outline>
		</outline>
		<outline text="With Capability Explanation On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following an capability explanation line." />
				<outline text="Line 4: ''" />
				<outline text="Explanation: An capability explanation line can only be followed by another explanation line " />
				<outline text="             or an outdented (2x) feature line." />
			</outline>
		</outline>
		<outline text="With Capability Explanation Header On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following an capability explanation header line." />
				<outline text="Line 2: ''" />
				<outline text="Explanation: An capability explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Capability On Last Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'No Line' is following an capability line." />
				<outline text="Line 1: ''" />
				<outline text="Explanation: An capability line can only be followed by an indented 'Explanation' header or " />
				<outline text="             indented Feature line." />
			</outline>
		</outline>
		<outline text="With No Lines [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:"/>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: The file is empty." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Step Input Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="					Here is my " />
				<outline text="					step explanation" />
				<outline text="				Input" />
				<outline text="			When step 2 Is Invalid Line" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Step' is following a step input header." />
				<outline text="Line 24: '			When step 2 Is Invalid Line'" />
				<outline text="Explanation: A step input header line can only be followed by an indented input line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Step Explanation Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Explanation" />
				<outline text="				Input" />
				<outline text="					Here is the" />
				<outline text="					Step input " />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'StepInputHeader' is following a step explanation header." />
				<outline text="Line 21: '				Input'" />
				<outline text="Explanation: A step explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="				Invalid Line" />
				<outline text="			When step 2" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Unknown' is following a step line." />
				<outline text="Line 20: '				Invalid Line'" />
				<outline text="Explanation: A step line can only be followed by another step line or an indented " />
				<outline text="             'Explanation' or 'Input' header line, or outdented scenario, feature, or " />
				<outline text="             capability." />
			</outline>
		</outline>
		<outline text="With Invalid Step Line After Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				scenario explanation" />
				<outline text="			Given step 1" />
				<outline text="			Invalid Line" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: Invalid step starter." />
				<outline text="Line 20: 'Invalid Line'" />
				<outline text="Explanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'" />
				<outline text="             Steps that start with '.' will have it's text interpreted as literal code " />
				<outline text="             when generating feature classes." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Scenario Explanation Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="			Given step 1" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Step' is following an scenario explanation header line." />
				<outline text="Line 17: '			Given step 1'" />
				<outline text="Explanation: A scenario explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Scenario [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="			Invalid Line" />
				<outline text="			Given step 1" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: Invalid step starter." />
				<outline text="Line 16: 'Invalid Line'" />
				<outline text="Explanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'" />
				<outline text="             Steps that start with '.' will have it's text interpreted as literal code " />
				<outline text="             when generating feature classes." />
			</outline>
		</outline>
		<outline text="With Invalid Indented Step Line After Scenario [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			feature explanation" />
				<outline text="" />
				<outline text="		My Scenario 1" />
				<outline text="				Given step 1" />
				<outline text="			Then step 3" />
				<outline text="			And step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Unknown' is following a scenario line." />
				<outline text="Line 16: '				Given step 1'" />
				<outline text="Explanation: A scenario line can only be followed by another scenario line, an indented" />
				<outline text="             'Explanation' header or indented step line, or an outdented feature or " />
				<outline text="             capability line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Feature Explanation Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you get some value" />
				<outline text="			You can do something" />
				<outline text="		Explanation" />
				<outline text="		My Scenario 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Scenario' is following a feature explanation header line." />
				<outline text="Line 11: '		My Scenario 1'" />
				<outline text="Explanation: A feature explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Feature Statement Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="	My Feature 1" />
				<outline text="		Statement" />
				<outline text="		My Scenario 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Scenario' is following a feature statement header line." />
				<outline text="Line 7: '		My Scenario 1'" />
				<outline text="Explanation: A feature statement header line can only be followed by an indented " />
				<outline text="             statement line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Feature [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="		Here is " />
				<outline text="		my explanation" />
				<outline text="	My Feature 1" />
				<outline text="	My Feature 2" />
				<outline text="		My Scenario 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Feature' following a feature line." />
				<outline text="Line 6: '	My Feature 2'" />
				<outline text="Explanation: A feature line can only be followed by an indented scenario name, indented" />
				<outline text="             'Explanation' header or indented 'Statement' header." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Capability Explanation Header [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	Explanation" />
				<outline text="	My Feature 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Feature' is following an capability explanation header line." />
				<outline text="Line 3: '	My Feature 1'" />
				<outline text="Explanation: An capability explanation header line can only be followed by an indented " />
				<outline text="             explanation line." />
			</outline>
		</outline>
		<outline text="With Invalid Line After Capability [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="My Capability 1 - My Sub Capability 2" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Capability' is following an capability line." />
				<outline text="Line 2: 'My Capability 1 - My Sub Capability 2'" />
				<outline text="Explanation: An capability line can only be followed by an indented 'Explanation' header or " />
				<outline text="             indented Feature line." />
			</outline>
		</outline>
		<outline text="With Invalid Indented Line After Capability [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="		Invalid Line" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will see output matching the following template:">
				<outline text="{{.*}}/rl" />
				<outline text="Error: An invalid line of type 'Scenario' is following an capability line." />
				<outline text="Line 2: '		Invalid Line'" />
				<outline text="Explanation: An capability line can only be followed by an indented 'Explanation' header or " />
				<outline text="             indented Feature line." />
			</outline>
		</outline>
	</outline>
	<outline text="For An MS Test Project [Failed]">
		<outline text="With An Empty Scenario [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Given Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Given Step With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given "My" Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("\"My\" Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A When Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="			When Step 2" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.When("Step 2"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Then Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="			When Step 2" />
				<outline text="			Then Step 3" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.When("Step 2"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Then("Step 3"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With An And Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="			When Step 2" />
				<outline text="			Then Step 3" />
				<outline text="			And Step 4" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.When("Step 2"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Then("Step 3"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.And("Step 4"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Code Step [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="			When Step 2" />
				<outline text="			Then Step 3" />
				<outline text="			And Step 4" />
				<outline text="			.And(this.IsSomeCode())" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.When("Step 2"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Then("Step 3"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.And("Step 4"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="//				.And(this.IsSomeCode())" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Input [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Input" />
				<outline text="					Here Is" />
				<outline text="					My Multiline Input" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}," />
				<outline text="					@"" />
				<outline text="						Here Is" />
				<outline text="						My Multiline Input".RemoveIndentation(6,true)," />
				<outline text="					TextFormat.text)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Input With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Input" />
				<outline text="					Here Is" />
				<outline text="					"My" Multiline Input" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}," />
				<outline text="					@"" />
				<outline text="						Here Is" />
				<outline text="						""My"" Multiline Input".RemoveIndentation(6,true)," />
				<outline text="					TextFormat.text)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Input Single Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Input" />
				<outline text="					Here Is My Single Line Input" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}," />
				<outline text="					"Here Is My Single Line Input"," />
				<outline text="					TextFormat.text)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Input Single Line With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Input" />
				<outline text="					Here Is "My" Single Line Input" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}," />
				<outline text="					"Here Is \"My\" Single Line Input"," />
				<outline text="					TextFormat.text)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Explanation [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Explanation" />
				<outline text="					Here Is" />
				<outline text="					My Multiline Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}, " />
				<outline text="					null, " />
				<outline text="					null," />
				<outline text="					@"" />
				<outline text="						Here Is" />
				<outline text="						My Multiline Explanation".RemoveIndentation(6,true))" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Explanation With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Explanation" />
				<outline text="					Here Is" />
				<outline text="					"My" Multiline Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}, " />
				<outline text="					null, " />
				<outline text="					null," />
				<outline text="					@"" />
				<outline text="						Here Is" />
				<outline text="						""My"" Multiline Explanation".RemoveIndentation(6,true))" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Explanation Single Line [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Explanation" />
				<outline text="					Here Is My Singleline Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}, " />
				<outline text="					null, " />
				<outline text="					null," />
				<outline text="					"Here Is My Singleline Explanation")" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step Explanation Single Line With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
				<outline text="				Explanation" />
				<outline text="					Here Is "My" Singleline Explanation" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					}, " />
				<outline text="					null, " />
				<outline text="					null," />
				<outline text="					"Here Is \"My\" Singleline Explanation")" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Step With Trailing Spaces [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1           " />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1           "," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Scenario Explanation [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is my " />
				<outline text="				multiline scenario " />
				<outline text="				explanation" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		[Explanation(@"" />
				<outline text="			Here is my " />
				<outline text="			multiline scenario " />
				<outline text="			explanation",3)]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Scenario Explanation With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Explanation" />
				<outline text="				Here is "my" " />
				<outline text="				multiline scenario " />
				<outline text="				explanation" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		[Explanation(@"" />
				<outline text="			Here is ""my"" " />
				<outline text="			multiline scenario " />
				<outline text="			explanation",3)]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Scenario With Trailing Spaces [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1          " />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Scenario Reason Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1 #R-MyReason" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("MyReason", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Scenario Reason Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1 #R-MyReason1 #R-MyReason2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("MyReason1", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Scenario Owner Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1 @MyOwner1 @MyOwner2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		[Assignments("MyOwner1","MyOwner2")]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Scenario General Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1 #T-MyTag1 #T-MyTag2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		[Tags("MyTag1","MyTag2")]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With An Existing Feature [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="And you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.xbdd.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Feature Explanation [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			multiline feature " />
				<outline text="			explanation" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[Explanation(@"" />
				<outline text="		Here is my " />
				<outline text="		multiline feature " />
				<outline text="		explanation",2)]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Feature Explanation With Quotes [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		Explanation" />
				<outline text="			Here is "my" " />
				<outline text="			multiline feature " />
				<outline text="			explanation" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[Explanation(@"" />
				<outline text="		Here is ""my"" " />
				<outline text="		multiline feature " />
				<outline text="		explanation",2)]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Feature Statement [Failed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		Explanation" />
				<outline text="			Here is my " />
				<outline text="			multiline feature " />
				<outline text="			explanation" />
				<outline text="		Statement" />
				<outline text="			As a user" />
				<outline text="			So that you derive some value" />
				<outline text="			You can performing some action with the product" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[AsA("user")]" />
				<outline text="	[SoThat("you can derive some value")]" />
				<outline text="	[By("performing some action with the product")]" />
				<outline text="	[Explanation(@"" />
				<outline text="		Here is my " />
				<outline text="		multiline feature " />
				<outline text="		explanation",2)]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Feature With Trailing Spaces [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1     " />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Capability With Trailing Spaces [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1     " />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Ignored Feature Reason Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1 #R-IgnoredReasonTag" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Feature General Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1 #T-MyFeatureTag #T-MyFeatureTag2" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[Tags("MyFeatureTag","MyFeatureTag2")]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Feature Owner Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1 @MyFeatureOwner1 @MyFeatureOwner2" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	[Assignments("MyFeatureOwner1","MyFeatureOwner2")]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Ignored Capability Tags [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1 #R-Ignored #T-Ignored @Ignored" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With A Workflowy Text Export [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="- My Capability 1 - My Sub Capability 1" />
				<outline text="  - My Feature 1" />
				<outline text="    - My Scenario 1" />
				<outline text="      - Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Capability And Feature [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Capability And Feature Nonconsecutive [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="My Capability 2 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Capability [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 0" />
				<outline text="		My Scenario 1" />
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Feature [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Feature Nonconsecutive [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="	My Feature 2" />
				<outline text="		My Scenario 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 2" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Scenario [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 2000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
		<outline text="With Duplicate Scenario Nonconsecutive [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="My Capability 1 - My Sub Capability 1" />
				<outline text="	My Feature 1" />
				<outline text="		My Scenario 1" />
				<outline text="		My Scenario 2" />
				<outline text="		My Scenario 1" />
				<outline text="			Given Step 1" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd project generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample.Features/Features/MyCapability1/MySubCapability1/MyFeature1.cs' that matches the template:">
				<outline text="namespace MyGeneratedSample.Features.MyCapability1.MySubCapability1" />
				<outline text="{" />
				<outline text="	using Microsoft.VisualStudio.TestTools.UnitTesting;" />
				<outline text="	using System;" />
				<outline text="	using System.Threading.Tasks;" />
				<outline text="	using xBDD;" />
				<outline text="	using xBDD.Utility;" />
				<outline text="" />
				<outline text="	[TestClass]" />
				<outline text="	public partial class MyFeature1: xBDDFeatureBase" />
				<outline text="	{" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 1000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario2()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 2000)" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="		[TestMethod]" />
				<outline text="		public async Task MyScenario1()" />
				<outline text="		{" />
				<outline text="			await xB.AddScenario(this, 3000)" />
				<outline text="				.Given("Step 1"," />
				<outline text="					(s) => { " />
				<outline text="						// Enter your code here." />
				<outline text="					})" />
				<outline text="				.Skip("Defining", Assert.Inconclusive);" />
				<outline text="		}" />
				<outline text="" />
				<outline text="	}" />
				<outline text="}" />
			</outline>
		</outline>
</outline>
<outline text="xBDD - Features - Generating Code - Generating Solution Files - Using An Xbdd Feature Import File [Defining]">
		<outline text="With A Valid Solution Definition [Passed]">
			<outline text="Given you have an empty directory"/>
			<outline text="And add a scenario outline file with the following content:">
				<outline text="Project: MyGeneratedSample.Features.Capability1" />
				<outline text="	My Capability A - My Sub Capability B" />
				<outline text="		My Feature C" />
				<outline text="			My Scenario D " />
				<outline text="Project: MyGeneratedSample.Features.Capability2" />
				<outline text="	My Capability E - My Sub Capability F" />
				<outline text="		My Feature G" />
				<outline text="			My Scenario H" />
			</outline>
			<outline text="When you run the command:">
				<outline text="dotnet xbdd solution generate MSTest" />
			</outline>
			<outline text="Then you will find a file at './MyGeneratedSample/MyGeneratedSample.Features.Capability1/xBddFeatureImport.txt' that matches the template:">
				<outline text="My Capability A - My Sub Capability B" />
				<outline text="	My Feature C" />
				<outline text="		My Scenario D " />
			</outline>
			<outline text="And you will find a file at './MyGeneratedSample/MyGeneratedSample.Features.Capability2/xBddFeatureImport.txt' that matches the template:">
				<outline text="My Capability E - My Sub Capability F" />
				<outline text="	My Feature G" />
				<outline text="		My Scenario H" />
			</outline>
		</outline>
		<outline text="With No Projects [Defining]">
		</outline>
		<outline text="With An Existing Project That Has Modified Project Files [Defining]">
		</outline>
	</outline>
</outline>
</body>
</opml>
