{"Areas":[{"Features":[{"Actor":"Developer","Assignments":[],"Capability":"executing the 'dotnet xbdd solution generate MSTest' command in a director that has a valid solution outline","FullClassName":"xBDD.Features.GeneratingCode.GeneratingSolutionFiles.UsingAnXbddFeatureImportFile.ForAnMSTestProject","Name":"For An MS Test Project","Reason":"Defining","Scenarios":[{"Assignments":[],"MethodName":"WithAValidSolutionDefinition","Name":"With A Valid Solution Definition","Outcome":1,"Sort":100,"Steps":[{"EndTime":"\/Date(1536406032861-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406032848-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406032867-0400)\/","Input":"Project: MyGeneratedSample.Features.Area1\r\n\tMy Area A - My Sub Area B\r\n\t\tMy Feature C\r\n\t\t\tMy Scenario D \r\nProject: MyGeneratedSample.Features.Area2\r\n\tMy Area E - My Sub Area F\r\n\t\tMy Feature G\r\n\t\t\tMy Scenario H","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406032865-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406032985-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd solution generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample\\MyGeneratedSample.Features.Area1\r\nFolder: MyGeneratedSample.Features.Area1\r\nProject initialized.\r\nDirectory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample\\MyGeneratedSample.Features.Area2\r\nFolder: MyGeneratedSample.Features.Area2\r\nProject initialized.\r\n","StartTime":"\/Date(1536406032867-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406032991-0400)\/","Input":"My Area A - My Sub Area B\r\n\tMy Feature C\r\n\t\tMy Scenario D ","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample\/MyGeneratedSample.Features.Area1\/xBddFeatureImport.txt' that matches the template:","Outcome":1,"Output":"My Area A - My Sub Area B\r\n\tMy Feature C\r\n\t\tMy Scenario D ","OutputFormat":6,"StartTime":"\/Date(1536406032985-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406032991-0400)\/","Input":"My Area E - My Sub Area F\r\n\tMy Feature G\r\n\t\tMy Scenario H","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample\/MyGeneratedSample.Features.Area2\/xBddFeatureImport.txt' that matches the template:","Outcome":1,"Output":"My Area E - My Sub Area F\r\n\tMy Feature G\r\n\t\tMy Scenario H","OutputFormat":6,"StartTime":"\/Date(1536406032991-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithNoProjects","Name":"With No Projects","Outcome":3,"Reason":"Defining","Sort":1002,"Steps":[],"Tags":[]},{"Assignments":[],"MethodName":"WithAnExistingProjectThatHasModifiedProjectFiles","Name":"With An Existing Project That Has Modified Project Files","Outcome":3,"Reason":"Defining","Sort":1003,"Steps":[],"Tags":[]}],"Sort":4,"Tags":[],"Value":"generate a new MS Test solution or new feature files for multiple projects from a single outline"}],"Name":"xBDD - Features - Generating Code - Generating Solution Files - Using An Xbdd Feature Import File","Reason":"Defining"},{"Features":[{"Actor":"Developer","Assignments":["Stewart","John"],"Capability":"executing the 'dotnet xbdd project generate MSTest' xbddToolsCommandArgs","Explanation":"## xBDD Tools\r\n\r\nYou can install a xbddToolsCommandArgs line utility that will help you generate a \r\ndotnet core test project with a file structure that will help you follow best \r\npractices for when building your tests.  All you need is an empty directory \r\nthat you want to create a new project within.  The xBDD framework will create \r\nthe following files in the directory:\r\n\r\n## Project Files\r\n\r\n1. **[FolderName].csproj** - If a project file does not already exist, xBDD will create a csproj \r\nfile with the same name as the folder you are initializing the project within.  The project file \r\nwill contain all the necessary references to develop xBDD features.  \r\nThis file will not be overwritten if it already exists.\r\n\r\n2. **[FolderName].csproj.xBDD** - xBDD will also create an identical project file that ends in \r\n.xbdd that it will continue to update each time you execute the `dotnet xbdd project generate \r\nMSTest` xbddToolsCommandArgs.  You can use this file to update your project file in the future if xBDD \r\nmakes any changes to the default project file.\r\n\r\n3. **TestInitializeAndComplete.xbdd.cs** - This class handles the test initialize and cleanup \r\noperations for xBDD.  If you already implement these methods in your project, comment out the \r\n`[AssemblyInitialize]` and `[AssemblyCleanup]` attributes and call the `TestRunStart()` \r\nand `TestRunComplete` methods from your code where you have implemented the respective \r\nattributes.  The `TestRunStart` method initializes the web browser to either display or not \r\ndisplay.  The `TestRunComplete` method ensures that the webdriver is disposed and generates \r\nstandard reports for a test run.\r\n\r\n4. **xBDDConfig.json** - Use this config file to override default values for xBDD settings.\r\n5. **xBDDFeatureBase.xbdd.cs** - This is the base class you should use for creating features. \r\nIt is not required but if you inherit from this class you will not need to implement the \r\niFeature interface or manually inject an iOutputWriter into each scenario.  The output writer \r\nis used by xBDD to write output to the testing framework during execution.  This helps with \r\nprinting out scenario and exception details when a step fails.  When scenarios run in a test \r\nclass that implements the iFeature interface, the output writer is automatically injected \r\ninto the scenario when it is run.  Without implementing the iFeature interface, you need to \r\nexplicity set the output writer for each scenario.  The xBDDFeatureBase class implements both \r\nthe iFeature and iOutputWriter interface so that all you need to do is inherit from this \r\nclass and all scenarios will automatically log details to the underlying testing framework (MSTest).\r\n\r\n6. **xBDDFeatureSort.cs** - This class is used to create a sorted list of features names \r\nthat can be passed to a test run object to sort the scenarios prior to running a report.  \r\nThis class is only written once by the framework.  If it already exists it will not be overwritten.\r\n\r\n7. **xBDDFeatureSort.xbdd.cs** - This class is a duplicate of the `xBDDFeatureSort.cs` \r\nclass and is recreated each time you generate code.  It is created so that you can \r\ncopy missing features into the `xBDDFeatureSort.cs` class. \r\n\r\n8. **xBDDReasonSort.cs** - This class is used to cascade the reasons up from scenarios, \r\nto features, to areas, to the test run.  The sort order controls the order of \r\nprecedence from least to most.  For example if two features have reasons A and B and \r\nthe ReasonSort places A before B then the parent area for both features will have a reason of B.\r\n\r\n9. **xBDDReasonSort.xbdd.cs** - This class is a duplicate of the `xBDDReasonSort.cs` \r\nclass and is recreated each time you generate code.  It is created so that you can \r\ncopy missing reasons into the `xBDDFeatureSort.cs` class. \r\n\r\n10. **xBDDFeatureImport.txt** - A text document that you can use to outline the areas, \r\nfeatures, scenarios, and steps to import into the project.  This document can use \r\neither tabs or spaces for indentation as long as it is consistent.  You can \r\nalso paste the text format for Workflowy outlines into this file and the dashes \r\nwill be automatically removed.\r\n\r\n11. **Features\/MySampleArea\/MySampleFeature.cs** - A sample feature for the project to execute.\r\n\r\n## Standard Reports\r\n\r\nThe standard xBDD project is setup to generate a standard set of reports \r\nwhen you run the tests in the test project.  These include:\r\n\r\n1. **Html Test Run Report** - Provides an outline view of the test results \r\nwith outcome statics at each level.\r\n\r\n2. **JSON Test Run Report** - A Json serialization of the Test Run object.  The test \r\nrun object is the foundation for all reports.  The Json test run report can be \r\nused to hydrate a test run to build any other report.\r\n\r\n3. **Text Test Run Report** - Provides a text indentation outline of the test run \r\nincluding step inputs, outputs and exceptions.\r\n\r\n5. **OPML Outline Report** - An Outline Processor Markup Language representation of \r\nthe test run results.  This can be used to copy features back into Workflowy.","FullClassName":"xBDD.Features.GeneratingCode.GeneratingProjectFiles.ForAnMSTestProject","Name":"For An MS Test Project","Scenarios":[{"Assignments":["Stewart","John"],"Explanation":"This is the default scenario expected for generating MS Project files.","MethodName":"InAnEmptyDirectory","Name":"In An Empty Directory","Outcome":1,"Sort":1001,"Steps":[{"EndTime":"\/Date(1536406033055-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406033054-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406033067-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406033055-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406033068-0400)\/","Input":"<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>netcoreapp2.1<\/TargetFramework>\r\n\t\t<IsPackable>false<\/IsPackable>\r\n\t<\/PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Net.Test.Sdk\" Version=\"15.8.0\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestAdapter\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestFramework\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver.ChromeDriver\" Version=\"2.41.0\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver\" Version=\"3.14.0\" \/>\r\n\t\t<PackageReference Include=\"xBDD\" Version=\"0.0.8-alpha\" \/>\r\n\t<\/ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"xBDDConfig.json\" CopyToOutputDirectory=\"PreserveNewest\" \/>\r\n\t<\/ItemGroup>\r\n\r\n<\/Project>","InputFormat":29,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj' that matches the template:","Outcome":1,"Output":"<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>netcoreapp2.1<\/TargetFramework>\r\n\t\t<IsPackable>false<\/IsPackable>\r\n\t<\/PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Net.Test.Sdk\" Version=\"15.8.0\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestAdapter\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestFramework\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver.ChromeDriver\" Version=\"2.41.0\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver\" Version=\"3.14.0\" \/>\r\n\t\t<PackageReference Include=\"xBDD\" Version=\"0.0.8-alpha\" \/>\r\n\t<\/ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"xBDDConfig.json\" CopyToOutputDirectory=\"PreserveNewest\" \/>\r\n\t<\/ItemGroup>\r\n\r\n<\/Project>","OutputFormat":29,"StartTime":"\/Date(1536406033067-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033068-0400)\/","Input":"<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>netcoreapp2.1<\/TargetFramework>\r\n\t\t<IsPackable>false<\/IsPackable>\r\n\t<\/PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Net.Test.Sdk\" Version=\"15.8.0\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestAdapter\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestFramework\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver.ChromeDriver\" Version=\"2.41.0\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver\" Version=\"3.14.0\" \/>\r\n\t\t<PackageReference Include=\"xBDD\" Version=\"0.0.8-alpha\" \/>\r\n\t<\/ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"xBDDConfig.json\" CopyToOutputDirectory=\"PreserveNewest\" \/>\r\n\t<\/ItemGroup>\r\n\r\n<\/Project>","InputFormat":29,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj.xbdd' that matches the template:","Outcome":1,"Output":"<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>netcoreapp2.1<\/TargetFramework>\r\n\t\t<IsPackable>false<\/IsPackable>\r\n\t<\/PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"2.1.1\" \/>\r\n\t\t<PackageReference Include=\"Microsoft.Net.Test.Sdk\" Version=\"15.8.0\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestAdapter\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"MSTEst.TestFramework\" Version=\"1.3.2\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver.ChromeDriver\" Version=\"2.41.0\" \/>\r\n\t\t<PackageReference Include=\"Selenium.WebDriver\" Version=\"3.14.0\" \/>\r\n\t\t<PackageReference Include=\"xBDD\" Version=\"0.0.8-alpha\" \/>\r\n\t<\/ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"xBDDConfig.json\" CopyToOutputDirectory=\"PreserveNewest\" \/>\r\n\t<\/ItemGroup>\r\n\r\n<\/Project>","OutputFormat":29,"StartTime":"\/Date(1536406033068-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033069-0400)\/","Input":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Generated Sample - Features\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"My Generated Sample - Features - \",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","InputFormat":18,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDConfig.json' that matches the template:","Outcome":1,"Output":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Generated Sample - Features\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"My Generated Sample - Features - \",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","OutputFormat":18,"StartTime":"\/Date(1536406033068-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033069-0400)\/","Input":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing xBDD;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting.Logging;\r\n\r\n\r\n\tpublic partial class xBDDFeatureBase: IFeature, IOutputWriter\r\n\t{\r\n\t\tpublic IOutputWriter OutputWriter { get { return this; } }\r\n\r\n\t\tpublic void WriteLine(string text) {\r\n\t\t\ttext = text.Replace(\"{\", \"{{\").Replace(\"}\",\"}}\");\r\n\t\t\tLogger.LogMessage(text);\r\n\t\t}\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDFeatureBase.xbdd.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing xBDD;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting.Logging;\r\n\r\n\r\n\tpublic partial class xBDDFeatureBase: IFeature, IOutputWriter\r\n\t{\r\n\t\tpublic IOutputWriter OutputWriter { get { return this; } }\r\n\r\n\t\tpublic void WriteLine(string text) {\r\n\t\t\ttext = text.Replace(\"{\", \"{{\").Replace(\"}\",\"}}\");\r\n\t\t\tLogger.LogMessage(text);\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406033069-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033069-0400)\/","Input":"MyImportedArea1\r\n\tMyImportedFeature\r\n\t\tMyImportedScenario #R-Ready\r\n\t\t\tGiven you have the xbdd tools installed\r\n\t\t\tAnd you have an xBDDFeatureImport.txt file defined in the root of the project\r\n\t\t\tWhen you execute 'dotnet xbdd project generate MSTest'\r\n\t\t\tThen a new feature will be defined in the project with two partial class files\r\n\t\t\tAnd you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\r\n\t\t\tAnd you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature","Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDFeatureImport.txt' that matches the template:","Outcome":1,"Output":"MyImportedArea1\r\n\tMyImportedFeature\r\n\t\tMyImportedScenario #R-Ready\r\n\t\t\tGiven you have the xbdd tools installed\r\n\t\t\tAnd you have an xBDDFeatureImport.txt file defined in the root of the project\r\n\t\t\tWhen you execute 'dotnet xbdd project generate MSTest'\r\n\t\t\tThen a new feature will be defined in the project with two partial class files\r\n\t\t\tAnd you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\r\n\t\t\tAnd you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature","StartTime":"\/Date(1536406033069-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033069-0400)\/","Input":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting.Logging;\r\n\tusing xBDD;\r\n\r\n\t[TestClass]\r\n\tpublic class TestSetupAndBreakdown\r\n\t{\r\n\r\n\t\t[AssemblyInitialize]\r\n\t\tpublic static void TestRunStart(TestContext context)\r\n\t\t{\r\n\t\t\txB.Initialize();\r\n\t\t}\r\n\t\t[AssemblyCleanup()]\r\n\t\tpublic static void TestRunComplete()\r\n\t\t{\r\n\t\t\txB.Complete(\"MyGeneratedSample.Features\", new xBDDSorting(), (message) => { Logger.LogMessage(message); });\r\n\t\t}\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDInitializeAndComplete.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting.Logging;\r\n\tusing xBDD;\r\n\r\n\t[TestClass]\r\n\tpublic class TestSetupAndBreakdown\r\n\t{\r\n\r\n\t\t[AssemblyInitialize]\r\n\t\tpublic static void TestRunStart(TestContext context)\r\n\t\t{\r\n\t\t\txB.Initialize();\r\n\t\t}\r\n\t\t[AssemblyCleanup()]\r\n\t\tpublic static void TestRunComplete()\r\n\t\t{\r\n\t\t\txB.Complete(\"MyGeneratedSample.Features\", new xBDDSorting(), (message) => { Logger.LogMessage(message); });\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406033069-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033070-0400)\/","Input":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing System;\r\n\tusing System.Collections.Generic;\r\n\tusing xBDD;\r\n\r\n\tpublic partial class xBDDSorting: ISorting\r\n\t{\r\n\t\tpublic List<string> GetSortedFeatureNames() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\ttypeof(MyGeneratedSample.Features.MyArea.MyFeature).FullName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tpublic List<string> GetSortedReasons() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\t\"Removing\",\r\n\t\t\t\t\"Untested\",\r\n\t\t\t\t\"Committed\",\r\n\t\t\t\t\"Ready\",\r\n\t\t\t\t\"Defining\",\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDSorting.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing System;\r\n\tusing System.Collections.Generic;\r\n\tusing xBDD;\r\n\r\n\tpublic partial class xBDDSorting: ISorting\r\n\t{\r\n\t\tpublic List<string> GetSortedFeatureNames() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\ttypeof(MyGeneratedSample.Features.MyArea.MyFeature).FullName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tpublic List<string> GetSortedReasons() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\t\"Removing\",\r\n\t\t\t\t\"Untested\",\r\n\t\t\t\t\"Committed\",\r\n\t\t\t\t\"Ready\",\r\n\t\t\t\t\"Defining\",\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406033070-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033070-0400)\/","Input":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing System;\r\n\tusing System.Collections.Generic;\r\n\tusing xBDD;\r\n\r\n\tpublic partial class xBDDSorting: ISorting\r\n\t{\r\n\t\tpublic List<string> GetGeneratedSortedFeatureNames() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\ttypeof(MyGeneratedSample.Features.MyArea.MyFeature).FullName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tpublic List<string> GetGeneratedReasons() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\t\"Removing\",\r\n\t\t\t\t\"Untested\",\r\n\t\t\t\t\"Committed\",\r\n\t\t\t\t\"Ready\",\r\n\t\t\t\t\"Defining\",\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDSorting.xbdd.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features\r\n{\r\n\tusing System;\r\n\tusing System.Collections.Generic;\r\n\tusing xBDD;\r\n\r\n\tpublic partial class xBDDSorting: ISorting\r\n\t{\r\n\t\tpublic List<string> GetGeneratedSortedFeatureNames() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\ttypeof(MyGeneratedSample.Features.MyArea.MyFeature).FullName,\r\n\t\t\t};\r\n\t\t}\r\n\t\tpublic List<string> GetGeneratedReasons() {\r\n\t\t\treturn new List<string>() {\r\n\t\t\t\t\"Removing\",\r\n\t\t\t\t\"Untested\",\r\n\t\t\t\t\"Committed\",\r\n\t\t\t\t\"Ready\",\r\n\t\t\t\t\"Defining\",\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406033070-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406033070-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[AsA(\"sample user\")]\r\n\t[YouCan(\"have my feature value\")]\r\n\t[By(\"execute my feature\")]\r\n\t[Explanation(@\"\r\n\t\t# My Explanation\r\n\t\tThis is a\r\n\t\tmultiline explanation of the feature.\r\n\t\t**And it uses markdown!**\")]\r\n\tpublic partial class MyFeature: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(\"This is an explanation of the scenario.\")]\r\n\t\tpublic async Task MyScenario()\r\n\t\t{\r\n\t\t\tawait xB.CurrentRun.AddScenario(this, 1)\r\n\t\t\t\t.Given(\"my step 1\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.When(\"my step 2 with multiline input\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, @\"\r\n\t\t\t\t\t\tHere \r\n\t\t\t\t\t\tis \r\n\t\t\t\t\t\tmy \r\n\t\t\t\t\t\tInput!\".RemoveIndentation(6, true), TextFormat.text\r\n\t\t\t\t)\r\n\t\t\t\t.And(\"my step 3 with an explanation\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, null, TextFormat.text, @\"\r\n\t\t\t\t\t\t# Step 3 Explanation \r\n\t\t\t\t\t\tThis is a multiline explanation of \r\n\t\t\t\t\t\tStep 3.  It uses markdown.  It will\r\n\t\t\t\t\t\tbe printed out along with the step name in the\r\n\t\t\t\t\t\thtml report.\"\r\n\t\t\t\t)\r\n\t\t\t\t.Then(\"my step 3 with output\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\ts.Output = \"Here is my output.\";\r\n\t\t\t\t\ts.OutputFormat = TextFormat.text;\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.Run();\r\n\t\t}\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea\/MyFeature.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[AsA(\"sample user\")]\r\n\t[YouCan(\"have my feature value\")]\r\n\t[By(\"execute my feature\")]\r\n\t[Explanation(@\"\r\n\t\t# My Explanation\r\n\t\tThis is a\r\n\t\tmultiline explanation of the feature.\r\n\t\t**And it uses markdown!**\")]\r\n\tpublic partial class MyFeature: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(\"This is an explanation of the scenario.\")]\r\n\t\tpublic async Task MyScenario()\r\n\t\t{\r\n\t\t\tawait xB.CurrentRun.AddScenario(this, 1)\r\n\t\t\t\t.Given(\"my step 1\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.When(\"my step 2 with multiline input\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, @\"\r\n\t\t\t\t\t\tHere \r\n\t\t\t\t\t\tis \r\n\t\t\t\t\t\tmy \r\n\t\t\t\t\t\tInput!\".RemoveIndentation(6, true), TextFormat.text\r\n\t\t\t\t)\r\n\t\t\t\t.And(\"my step 3 with an explanation\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, null, TextFormat.text, @\"\r\n\t\t\t\t\t\t# Step 3 Explanation \r\n\t\t\t\t\t\tThis is a multiline explanation of \r\n\t\t\t\t\t\tStep 3.  It uses markdown.  It will\r\n\t\t\t\t\t\tbe printed out along with the step name in the\r\n\t\t\t\t\t\thtml report.\"\r\n\t\t\t\t)\r\n\t\t\t\t.Then(\"my step 3 with output\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\ts.Output = \"Here is my output.\";\r\n\t\t\t\t\ts.OutputFormat = TextFormat.text;\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.Run();\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406033070-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039077-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet test","InputFormat":27,"Name":"you will find the project execute tests with the 'dotnet test' command","Outcome":1,"Output":"Build started, please wait...\r\nBuild completed.\r\n\r\nTest run for C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features.dll(.NETCoreApp,Version=v2.1)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.7.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\n\r\nTotal tests: 1. Passed: 1. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 1.0617 Seconds\r\n","StartTime":"\/Date(1536406033070-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039078-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.html","InputFormat":27,"Name":"you will find an HTML Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.html'.","Outcome":1,"Output":"<head>\r\n    <meta charset=\"utf-8\" \/>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \/>\r\n\t<title>My Generated Sample - Features<\/title>\r\n    <link rel=\"stylesheet\" href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/open-iconic\/1.1.1\/font\/css\/open-iconic-bootstrap.min.css\" integrity=\"sha256-BJ\/G+e+y7bQdrYkS2RBTyNfBHpA9IuGaPmf9htub5MQ=\" crossorigin=\"anonymous\" \/>\r\n    <link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.1.3\/css\/bootstrap.min.css\" integrity=\"sha384-MCw98\/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\r\n    <style> div#report-dates { margin: 0rem 0rem .5rem 5rem; } h1.report-name { margin: .5rem 0rem 0rem 0rem; } span.testrun.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.area.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.badge-distro { width: 3.5rem; display: inline-block; height: 1.5rem; vertical-align: bottom; } span.testrun.stats { font-size: 75%; font-weight: 700; line-height: 1; text-align: center; white-space: nowrap; border-radius: .25rem; height: 1.5em; display: inline-block; width: 1.75rem; position: absolute; margin-left: 2rem; z-index: -1; vertical-align: middle; } span.area.stats { font-size: 75%; font-weight: 700; line-height: 1; text-align: center; white-space: nowrap; border-radius: .25rem; height: 1.5em; display: inline-block; width: 1.75rem; position: absolute; margin-left: 2rem; z-index: -1; vertical-align: middle; } span.feature.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.scenario.badge { width: 2rem } span.duration { font-size: 1rem; color: gray; } span.reason { font-size: 1rem; color: gray; } span.status { font-size: 1rem; color: gray; } span.step.duration { font-size: .75rem; color: gray; } span.oi.oi-info { font-size: 80% } ol.testruns { margin: .5rem 0rem; } ol.areas { margin: .5rem 0rem; } ol.testruns, ol.areas, ol.features, ol.scenarios, ol.steps { margin-left: 3rem; } span.badge { margin-left: .25rem; } span.distro { width: 1.5rem; height: 1.5rem; display: inline-block; margin-left: 2rem; border: 1px solid white; } span.name { margin-left: .75rem; } dl.exception { margin: 1rem 3rem; padding: 1rem; } dl.exception dt { margin-bottom: .25rem; } ol.features { margin-bottom: 2rem; } ol.scenarios { margin-bottom: 1.5rem; } ol.steps { margin-bottom: 1rem; } iframe { border: 1px solid gray; resize: both; overflow: auto; } h2, h3, h4, h5 { font-size: 1.25rem; margin: .5rem; font-weight: 400; } h5 { font-size: 1rem; margin: .25rem .75rem; } dl.error-type, dl.error-message, dl.error-stack { padding: .5rem; } dl.error-type pre, dl.error-message pre, dl.error-stack pre { padding: .5rem; } pre.feature-statement { margin: 0rem 0rem 1rem 3rem; padding: .5rem; } .table th, .table td { border-top: none !important; line-height: 1 !important; padding: 2px 10px !important; } td.graph td { padding: 0px !important; } .table { margin: 0px !important; } .table td.bar { padding: 0px !important; } .report-percent-bar { background-color: #56C1F7; } .testrun-percent-bar { background-color: #A4DEFB; } .area-percent-bar { background-color: #A4DEFB; } .pointer { cursor: pointer } pre { white-space: pre !important; } pre.input { margin: 1rem auto; width: 95%; } pre.output { margin: 1rem auto; width: 95%; } .collapsing { -webkit-transition: none; transition: none; display: none; } pre.prettyprint {  background-color: #eee; } .linenums li { list-style-type: decimal !iinputortant;}<\/style>\r\n<\/head>\r\n<body class=\"container-fluid\">\r\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a class=\"navbar-brand\" href=\"#\">xBDD Test Results<\/a>\r\n                    <button id=\"menu-button\" \r\n                        class=\"navbar-toggler\" \r\n                        type=\"button\" \r\n                        data-toggle=\"collapse\" \r\n                        data-target=\"#navbarNavAltMarkup\" \r\n                        aria-controls=\"navbarNavAltMarkup\" \r\n                        aria-expanded=\"false\" \r\n                        aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"><\/span>\r\n                    <\/button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div class=\"navbar-nav\">                         <a class=\"nav-item nav-link active\" href=\"javascript: $('ol.features').collapse('show');\" id=\"expand-all-areas-button\">Expand All Areas <span class=\"sr-only\">(current)<\/span><\/a>                        <\/div>\r\n                    <\/div>\r\n                <\/nav>\t<div class=\"page-header\" style=\"margin-top: 0px !important;\">\r\n\t\t<h1 class=\"report-name\">\r\n\t\t\t<span class=\"report badge pointer badge-pill total badge-success\" title=\"Scenarios\">1<\/span>\r\n\t\t\t<span class=\"name\">My Generated Sample - Features<\/span>\r\n\t\t\t<span class=\"report duration\"> [12 ms]<\/span>\r\n\t\t<\/h1>\r\n\t<\/div>\r\n\t<div style=\"margin-top: 0px !important;\" id=\"report-dates\">\r\n<span id=\"report-start-date\" title=\"Start\">2018-09-08 07:27 AM GMT-04:00<\/span>\t<\/div>\r\n\t<table class=\"table table-condensed \" style=\"width: 100%; empty-cells: show;\">\r\n\t\t<tr id=\"report-areas-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Areas<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t\t<tr id=\"report-features-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Features<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t\t<tr id=\"report-scenarios-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t<\/table>\r\n\t<ol class=\"areas list-unstyled\">\r\n\t\t<li class=\"area\" id=\"area-1\">\r\n\t\t\t<h2 class=\"collapsed\"><span class=\"area badge-distro\" id=\"area-1-badge-distro\" data-toggle=\"collapse\" href=\"#area-1-stats\" aria-expanded=\"false\" aria-controls=\"area-1-stats\"  title=\"Scenarios\"><span class=\"area badge badge-pill pointer total badge-success\" id=\"area-1-badge\">1<\/span><span class=\"area distro pointer\" id=\"area-1-distro\"><div class=\"distro bg-success\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n\t\t\t\t<span class=\"name pointer\" id=\"area-1-name\" data-toggle=\"collapse\" href=\"#area-1-features\" aria-expanded=\"false\" aria-controls=\"area-1-features\" >My Area<\/span>\r\n\t\t\t\t<span class=\"area duration\"> [12 ms]<\/span>\r\n\t\t\t<\/h2>\r\n\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"area-1-stats\">\r\n\t\t\t\t\t<tr id=\"report-features-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Features<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr id=\"report-scenarios-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/table>\r\n\t\t\t<ol class=\"features list-unstyled collapse\" style=\"border-left: 2px solid #5A8B5B;\" id=\"area-1-features\" aria-expanded=\"false\">\r\n\t\t\t\t<li class=\"feature\" id=\"feature-1\">\r\n\t\t\t\t\t<h3 id=\"vertical-align: top !important;\"><span class=\"feature badge-distro\" id=\"feature-1-badge-distro\" data-toggle=\"collapse\" href=\"#feature-1-stats\" aria-expanded=\"false\" aria-controls=\"feature-1-stats\"  title=\"Scenarios\"><span class=\"feature badge badge-pill pointer total badge-success\" id=\"feature-1-badge\">1<\/span><span class=\"feature distro pointer\" id=\"feature-1-distro\"><div class=\"distro bg-success\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n<span class=\"feature-statement-link badge pointer badge-secondary\" id=\"feature-1-statement-link\" data-toggle=\"collapse\" href=\"#feature-1-statement\" aria-expanded=\"false\" aria-controls=\"feature-1-statement\"><span class=\"oi oi-info\" aria-hidden=\"true\"><\/span><\/span>\t\t\t\t\t\t<span class=\"name pointer\" data-toggle=\"collapse\" href=\"#feature-1-scenarios\" aria-expanded=\"false\" aria-controls=\"feature-1-scenarios\" >My Feature<\/span>\r\n\t\t\t\t\t\t<span class=\"feature duration\"> [12 ms]<\/span>\r\n\t\t\t\t\t<\/h3>\r\n\t\t\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"feature-1-stats\">\r\n\t\t\t\t\t\t<tr id=\"feature-1-scenario-stats\">\r\n\t\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t<div class=\"output collapse\" id=\"feature-1-statement\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t<pre class=\"feature-statement bg-light rounded\" id=\"feature-1-statement\">As a sample user\r\nYou can have my feature value\r\nBy execute my feature<\/pre>\r\n<\/div>\r\n\t\t\t\t\t<ol class=\"scenarios list-unstyled collapse\" style=\"border-left: 2px solid #5A8B5B;\" id=\"feature-1-scenarios\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t<li class=\"scenario passed\" id=\"scenario-1\">\r\n\t\t\t\t\t\t\t<h4 class=\"panel-heading\" data-toggle=\"collapse\" href=\"#scenario-1-steps\" aria-expanded=\"false\" aria-controls=\"scenario-1-steps\" >\t\t\t\t\t\t\t\t<span class=\"scenario badge pointer total badge-success\" title=\"Steps\">4<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"name pointer\">My Scenario<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"scenario duration\"> [12 ms]<\/span>\r\n\t\t\t\t\t\t\t<\/h4>\r\n\t\t\t\t\t\t\t<ol class=\"steps list-unstyled collapse\" id=\"scenario-1-steps\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<li id=\"step-1\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-1-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Given my step 1<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-2\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-2-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">When my step 2 with multiline input<\/span>\r\n<a class=\"step-input-link\" data-toggle=\"collapse\" href=\"#step-2-input\" aria-expanded=\"false\" aria-controls=\"step-2-input\"> [Input]<\/a><span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input collapse\" id=\"step-2-input\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"input title\" id=\"step-2-input-title\">\r\nInput\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t<pre class=\"input prettyprint linenums rounded lang-text\" id=\"input-2\">Here \r\nis \r\nmy \r\nInput!<\/pre>\r\n<\/div>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-3\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-3-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">And my step 3 with an explanation<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-4\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-4-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Then my step 3 with output<\/span>\r\n<a class=\"step-output-link\" data-toggle=\"collapse\" href=\"#step-4-output\" aria-expanded=\"false\" aria-controls=\"step-4-output\"> [Output]<\/a><span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t\t<div class=\"output collapse\" id=\"step-4-output\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"output title\" id=\"step-4-output-title\">\r\nOutput\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t<pre class=\"output prettyprint linenums rounded lang-text\" id=\"output-4\">Here is my output.<\/pre>\r\n<\/div>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t<\/ol>\r\n\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t<\/ol>\r\n\t\t\t\t<\/li>\r\n\t\t\t<\/ol>\r\n\t\t<\/li>\r\n\t<\/ol>\r\n    <script src=\"https:\/\/code.jquery.com\/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i\/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/popper.js\/1.14.3\/umd\/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK\/l8WvCWPIPm49\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.1.3\/js\/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW\/JmZQ5stwEULTy\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/cdn.rawgit.com\/google\/code-prettify\/master\/loader\/run_prettify.js\"><\/script>\r\n    <script language=\"javascript\" type=\"text\/javascript\">function resizeIframe(obj) { obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px'; }<\/script>\r\n<\/body>\r\n<\/html>","OutputFormat":16,"StartTime":"\/Date(1536406039077-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039078-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.json","InputFormat":27,"Name":"you will find a JSON Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.json'.","Outcome":1,"Output":"{\"Areas\":[{\"Features\":[{\"Actor\":\"sample user\",\"Assignments\":[],\"Capability\":\"execute my feature\",\"Explanation\":\"\\r\\n\\t\\t# My Explanation\\r\\n\\t\\tThis is a\\r\\n\\t\\tmultiline explanation of the feature.\\r\\n\\t\\t**And it uses markdown!**\",\"FullClassName\":\"MyGeneratedSample.Features.MyArea.MyFeature\",\"Name\":\"My Feature\",\"Scenarios\":[{\"Assignments\":[],\"Explanation\":\"This is an explanation of the scenario.\",\"MethodName\":\"MyScenario\",\"Name\":\"My Scenario\",\"Outcome\":1,\"Sort\":1,\"Steps\":[{\"EndTime\":\"\\\/Date(1536406038743-0400)\\\/\",\"Input\":\"\",\"Name\":\"my step 1\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406038742-0400)\\\/\"},{\"ActionType\":1,\"EndTime\":\"\\\/Date(1536406038747-0400)\\\/\",\"Input\":\"Here \\r\\nis \\r\\nmy \\r\\nInput!\",\"Name\":\"my step 2 with multiline input\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406038746-0400)\\\/\"},{\"ActionType\":3,\"EndTime\":\"\\\/Date(1536406038747-0400)\\\/\",\"Explanation\":\"\\r\\n\\t\\t\\t\\t\\t\\t# Step 3 Explanation \\r\\n\\t\\t\\t\\t\\t\\tThis is a multiline explanation of \\r\\n\\t\\t\\t\\t\\t\\tStep 3.  It uses markdown.  It will\\r\\n\\t\\t\\t\\t\\t\\tbe printed out along with the step name in the\\r\\n\\t\\t\\t\\t\\t\\thtml report.\",\"Name\":\"my step 3 with an explanation\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406038747-0400)\\\/\"},{\"ActionType\":2,\"EndTime\":\"\\\/Date(1536406038747-0400)\\\/\",\"Input\":\"\",\"Name\":\"my step 3 with output\",\"Outcome\":1,\"Output\":\"Here is my output.\",\"StartTime\":\"\\\/Date(1536406038747-0400)\\\/\"}],\"Tags\":[]}],\"Sort\":1,\"Tags\":[],\"Value\":\"have my feature value\"}],\"Name\":\"My Generated Sample - Features - My Area\"}],\"Name\":\"My Generated Sample - Features\"}","OutputFormat":18,"StartTime":"\/Date(1536406039078-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039079-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.txt","InputFormat":27,"Name":"you will find a Text Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.txt'.","Outcome":1,"Output":"My Generated Sample - Features\r\n\r\nMy Generated Sample - Features - My Area\r\n\tMy Feature\r\n\t\tMy Scenario\r\n\t\t\tGiven my step 1\r\n\t\t\tWhen my step 2 with multiline input\r\n\t\t\t\tHere \r\n\t\t\t\tis \r\n\t\t\t\tmy \r\n\t\t\t\tInput!\r\n\t\t\tAnd my step 3 with an explanation\r\n\t\t\tThen my step 3 with output\r\n","StartTime":"\/Date(1536406039078-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039079-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.Outline.txt","InputFormat":27,"Name":"you will find a Text Outline Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.Outline.txt'.","Outcome":1,"Output":"My Generated Sample - Features\r\n\r\nMy Generated Sample - Features - My Area\r\n\tMy Feature\r\n\t\tMy Scenario\r\n\t\t\tGiven my step 1\r\n\t\t\tWhen my step 2 with multiline input\r\n\t\t\t\tHere \r\n\t\t\t\tis \r\n\t\t\t\tmy \r\n\t\t\t\tInput!\r\n\t\t\tAnd my step 3 with an explanation\r\n\t\t\tThen my step 3 with output\r\n","StartTime":"\/Date(1536406039079-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039079-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.opml","InputFormat":27,"Name":"you will find a OPML Outline Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.opml'.","Outcome":1,"Output":"<?xml version=\"1.0\"?>\r\n<opml version=\"2.0\">\r\n<head>\r\n<\/head>\r\n<body>\r\n\r\n<outline text=\"My Generated Sample - Features - My Area\">\r\n\t<outline text=\"My Feature\">\r\n\t\t<outline text=\"My Scenario\">\r\n\t\t\t<outline text=\"Given my step 1\"\/>\r\n\t\t\t<outline text=\"When my step 2 with multiline input\">\r\n\t\t\t\t<outline text=\"Here \" \/>\r\n\t\t\t\t<outline text=\"is \" \/>\r\n\t\t\t\t<outline text=\"my \" \/>\r\n\t\t\t\t<outline text=\"Input!\" \/>\r\n\t\t\t<\/outline>\r\n\t\t\t<outline text=\"And my step 3 with an explanation\"\/>\r\n\t\t\t<outline text=\"Then my step 3 with output\"\/>\r\n\t\t<\/outline>\r\n\t<\/outline>\r\n<\/outline>\r\n<\/body>\r\n<\/opml>\r\n","OutputFormat":29,"StartTime":"\/Date(1536406039079-0400)\/"}],"Tags":["Something","SomethingElse"]},{"Assignments":["Stewart"],"Explanation":"Verifies some files are created but not overwritten when the xbddToolsCommandArgs is executed a second time.  All files that either end in xBDD.[FileType] or end in .xbdd will be overwritten each time the project is generated.  This allows teams to 'upgrade' their default files when they change due to an upgrade.  Or it allows teams to regenerate copies of certain files like the FeatureSort or ReasonSort to make it easier to identify new additions and add them to their custom versions.","MethodName":"InAnInitializedXBDD","Name":"In An Initialized XBDD","Outcome":1,"Sort":1002,"Steps":[{"EndTime":"\/Date(1536406039106-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406039088-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406039118-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406039106-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039129-0400)\/","Input":"MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj,\r\nMyGeneratedSample.Features\/MyGeneratedSample.Features.csproj.xbdd,\r\nMyGeneratedSample.Features\/xBddFeatureBase.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddSorting.cs,\r\nMyGeneratedSample.Features\/xBddSorting.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddConfig.json,\r\nMyGeneratedSample.Features\/xBddFeatureImport.txt,\r\nMyGeneratedSample.Features\/xBddInitializeAndComplete.cs,\r\nMyGeneratedSample.Features\/Features\/MyArea\/MyFeature.cs","Name":"you modify all the standard project files","Outcome":1,"StartTime":"\/Date(1536406039118-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406039139-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406039129-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406039141-0400)\/","Input":"MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj,\r\nMyGeneratedSample.Features\/MyGeneratedSample.Features.csproj.xbdd,\r\nMyGeneratedSample.Features\/xBddFeatureBase.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddSorting.cs,\r\nMyGeneratedSample.Features\/xBddSorting.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddConfig.json,\r\nMyGeneratedSample.Features\/xBddFeatureImport.txt,\r\nMyGeneratedSample.Features\/xBddInitializeAndComplete.cs,\r\nMyGeneratedSample.Features\/Features\/MyArea\/MyFeature.cs","Name":"you will find the files ending in xbdd.[ext] or xbdd are overwritten","Outcome":1,"StartTime":"\/Date(1536406039139-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039143-0400)\/","Input":"MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj,\r\nMyGeneratedSample.Features\/MyGeneratedSample.Features.csproj.xbdd,\r\nMyGeneratedSample.Features\/xBddFeatureBase.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddSorting.cs,\r\nMyGeneratedSample.Features\/xBddSorting.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddConfig.json,\r\nMyGeneratedSample.Features\/xBddFeatureImport.txt,\r\nMyGeneratedSample.Features\/xBddInitializeAndComplete.cs,\r\nMyGeneratedSample.Features\/Features\/MyArea\/MyFeature.cs","Name":"you will find the files not ending in xbdd.[ext] or xbdd are not overwritten","Outcome":1,"Output":"\/\/ Modified\r\nnamespace MyGeneratedSample.Features\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting.Logging;\r\n\tusing xBDD;\r\n\r\n\t[TestClass]\r\n\tpublic class TestSetupAndBreakdown\r\n\t{\r\n\r\n\t\t[AssemblyInitialize]\r\n\t\tpublic static void TestRunStart(TestContext context)\r\n\t\t{\r\n\t\t\txB.Initialize();\r\n\t\t}\r\n\t\t[AssemblyCleanup()]\r\n\t\tpublic static void TestRunComplete()\r\n\t\t{\r\n\t\t\txB.Complete(\"MyGeneratedSample.Features\", new xBDDSorting(), (message) => { Logger.LogMessage(message); });\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406039141-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406039144-0400)\/","Input":"MyGeneratedSample.Features\/MyGeneratedSample.Features.csproj,\r\nMyGeneratedSample.Features\/MyGeneratedSample.Features.csproj.xbdd,\r\nMyGeneratedSample.Features\/xBddFeatureBase.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddSorting.cs,\r\nMyGeneratedSample.Features\/xBddSorting.xbdd.cs,\r\nMyGeneratedSample.Features\/xBddConfig.json,\r\nMyGeneratedSample.Features\/xBddFeatureImport.txt,\r\nMyGeneratedSample.Features\/xBddInitializeAndComplete.cs,\r\nMyGeneratedSample.Features\/Features\/MyArea\/MyFeature.cs","Name":"you will find the sample feature file is not modified because the xbdd backlog file already exists","Outcome":1,"Output":"\/\/ Mmodified\r\nnamespace MyGeneratedSample.Features.MyArea\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[AsA(\"sample user\")]\r\n\t[YouCan(\"have my feature value\")]\r\n\t[By(\"execute my feature\")]\r\n\t[Explanation(@\"\r\n\t\t# My Explanation\r\n\t\tThis is a\r\n\t\tmultiline explanation of the feature.\r\n\t\t**And it uses markdown!**\")]\r\n\tpublic partial class MyFeature: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(\"This is an explanation of the scenario.\")]\r\n\t\tpublic async Task MyScenario()\r\n\t\t{\r\n\t\t\tawait xB.CurrentRun.AddScenario(this, 1)\r\n\t\t\t\t.Given(\"my step 1\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.When(\"my step 2 with multiline input\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, @\"\r\n\t\t\t\t\t\tHere \r\n\t\t\t\t\t\tis \r\n\t\t\t\t\t\tmy \r\n\t\t\t\t\t\tInput!\".RemoveIndentation(6, true), TextFormat.text\r\n\t\t\t\t)\r\n\t\t\t\t.And(\"my step 3 with an explanation\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\t}, null, TextFormat.text, @\"\r\n\t\t\t\t\t\t# Step 3 Explanation \r\n\t\t\t\t\t\tThis is a multiline explanation of \r\n\t\t\t\t\t\tStep 3.  It uses markdown.  It will\r\n\t\t\t\t\t\tbe printed out along with the step name in the\r\n\t\t\t\t\t\thtml report.\"\r\n\t\t\t\t)\r\n\t\t\t\t.Then(\"my step 3 with output\", (s) => { \r\n\r\n\t\t\t\t\t\/\/Add code to perform action.\r\n\r\n\t\t\t\t\ts.Output = \"Here is my output.\";\r\n\t\t\t\t\ts.OutputFormat = TextFormat.text;\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.Run();\r\n\t\t}\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406039143-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045378-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet test","InputFormat":27,"Name":"you will find the project execute tests with the 'dotnet test' command","Outcome":1,"Output":"Build started, please wait...\r\nBuild completed.\r\n\r\nTest run for C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features.dll(.NETCoreApp,Version=v2.1)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.7.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nSkipped  MyImportedScenario\r\n\r\nTotal tests: 2. Passed: 1. Failed: 0. Skipped: 1.\r\nTest Run Successful.\r\nTest execution time: 1.2451 Seconds\r\n","StartTime":"\/Date(1536406039144-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045379-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.html","InputFormat":27,"Name":"you will find an HTML Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.html'.","Outcome":1,"Output":"<head>\r\n    <meta charset=\"utf-8\" \/>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \/>\r\n\t<title>My Generated Sample - Features<\/title>\r\n    <link rel=\"stylesheet\" href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/open-iconic\/1.1.1\/font\/css\/open-iconic-bootstrap.min.css\" integrity=\"sha256-BJ\/G+e+y7bQdrYkS2RBTyNfBHpA9IuGaPmf9htub5MQ=\" crossorigin=\"anonymous\" \/>\r\n    <link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.1.3\/css\/bootstrap.min.css\" integrity=\"sha384-MCw98\/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\r\n    <style> div#report-dates { margin: 0rem 0rem .5rem 5rem; } h1.report-name { margin: .5rem 0rem 0rem 0rem; } span.testrun.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.area.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.badge-distro { width: 3.5rem; display: inline-block; height: 1.5rem; vertical-align: bottom; } span.testrun.stats { font-size: 75%; font-weight: 700; line-height: 1; text-align: center; white-space: nowrap; border-radius: .25rem; height: 1.5em; display: inline-block; width: 1.75rem; position: absolute; margin-left: 2rem; z-index: -1; vertical-align: middle; } span.area.stats { font-size: 75%; font-weight: 700; line-height: 1; text-align: center; white-space: nowrap; border-radius: .25rem; height: 1.5em; display: inline-block; width: 1.75rem; position: absolute; margin-left: 2rem; z-index: -1; vertical-align: middle; } span.feature.badge { width: 2.5rem; height: 1.5rem; position: absolute; border: 1px white solid; } span.scenario.badge { width: 2rem } span.duration { font-size: 1rem; color: gray; } span.reason { font-size: 1rem; color: gray; } span.status { font-size: 1rem; color: gray; } span.step.duration { font-size: .75rem; color: gray; } span.oi.oi-info { font-size: 80% } ol.testruns { margin: .5rem 0rem; } ol.areas { margin: .5rem 0rem; } ol.testruns, ol.areas, ol.features, ol.scenarios, ol.steps { margin-left: 3rem; } span.badge { margin-left: .25rem; } span.distro { width: 1.5rem; height: 1.5rem; display: inline-block; margin-left: 2rem; border: 1px solid white; } span.name { margin-left: .75rem; } dl.exception { margin: 1rem 3rem; padding: 1rem; } dl.exception dt { margin-bottom: .25rem; } ol.features { margin-bottom: 2rem; } ol.scenarios { margin-bottom: 1.5rem; } ol.steps { margin-bottom: 1rem; } iframe { border: 1px solid gray; resize: both; overflow: auto; } h2, h3, h4, h5 { font-size: 1.25rem; margin: .5rem; font-weight: 400; } h5 { font-size: 1rem; margin: .25rem .75rem; } dl.error-type, dl.error-message, dl.error-stack { padding: .5rem; } dl.error-type pre, dl.error-message pre, dl.error-stack pre { padding: .5rem; } pre.feature-statement { margin: 0rem 0rem 1rem 3rem; padding: .5rem; } .table th, .table td { border-top: none !important; line-height: 1 !important; padding: 2px 10px !important; } td.graph td { padding: 0px !important; } .table { margin: 0px !important; } .table td.bar { padding: 0px !important; } .report-percent-bar { background-color: #56C1F7; } .testrun-percent-bar { background-color: #A4DEFB; } .area-percent-bar { background-color: #A4DEFB; } .pointer { cursor: pointer } pre { white-space: pre !important; } pre.input { margin: 1rem auto; width: 95%; } pre.output { margin: 1rem auto; width: 95%; } .collapsing { -webkit-transition: none; transition: none; display: none; } pre.prettyprint {  background-color: #eee; } .linenums li { list-style-type: decimal !iinputortant;}<\/style>\r\n<\/head>\r\n<body class=\"container-fluid\">\r\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a class=\"navbar-brand\" href=\"#\">xBDD Test Results<\/a>\r\n                    <button id=\"menu-button\" \r\n                        class=\"navbar-toggler\" \r\n                        type=\"button\" \r\n                        data-toggle=\"collapse\" \r\n                        data-target=\"#navbarNavAltMarkup\" \r\n                        aria-controls=\"navbarNavAltMarkup\" \r\n                        aria-expanded=\"false\" \r\n                        aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"><\/span>\r\n                    <\/button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div class=\"navbar-nav\">                         <a class=\"nav-item nav-link active\" href=\"javascript: $('ol.features').collapse('show');\" id=\"expand-all-areas-button\">Expand All Areas <span class=\"sr-only\">(current)<\/span><\/a>                        <\/div>\r\n                    <\/div>\r\n                <\/nav>\t<div class=\"page-header\" style=\"margin-top: 0px !important;\">\r\n\t\t<h1 class=\"report-name\">\r\n\t\t\t<span class=\"report badge pointer badge-pill total badge-warning\" title=\"Scenarios\">2<\/span>\r\n\t\t\t<span class=\"name\">My Generated Sample - Features<\/span>\r\n\t\t\t<span class=\"report reason\"> [Ready]<\/span>\r\n\t\t\t<span class=\"report duration\"> [70 ms]<\/span>\r\n\t\t<\/h1>\r\n\t<\/div>\r\n\t<div style=\"margin-top: 0px !important;\" id=\"report-dates\">\r\n<span id=\"report-start-date\" title=\"Start\">2018-09-08 07:27 AM GMT-04:00<\/span>\t<\/div>\r\n\t<table class=\"table table-condensed \" style=\"width: 100%; empty-cells: show;\">\r\n\t\t<tr id=\"report-areas-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Areas<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t\t<tr id=\"report-features-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Features<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t\t<tr id=\"report-scenarios-stats\">\r\n\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t<tr>\r\n\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 50%\"><\/td>\r\n\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n\t\t<\/td>\r\n\t<\/tr>\r\n\t<\/table>\r\n\t<ol class=\"areas list-unstyled\">\r\n\t\t<li class=\"area\" id=\"area-1\">\r\n\t\t\t<h2 class=\"collapsed\"><span class=\"area badge-distro\" id=\"area-1-badge-distro\" data-toggle=\"collapse\" href=\"#area-1-stats\" aria-expanded=\"false\" aria-controls=\"area-1-stats\"  title=\"Scenarios\"><span class=\"area badge badge-pill pointer total badge-success\" id=\"area-1-badge\">1<\/span><span class=\"area distro pointer\" id=\"area-1-distro\"><div class=\"distro bg-success\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n\t\t\t\t<span class=\"name pointer\" id=\"area-1-name\" data-toggle=\"collapse\" href=\"#area-1-features\" aria-expanded=\"false\" aria-controls=\"area-1-features\" >My Area<\/span>\r\n\t\t\t\t<span class=\"area duration\"> [3 ms]<\/span>\r\n\t\t\t<\/h2>\r\n\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"area-1-stats\">\r\n\t\t\t\t\t<tr id=\"report-features-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Features<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr id=\"report-scenarios-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/table>\r\n\t\t\t<ol class=\"features list-unstyled collapse\" style=\"border-left: 2px solid #5A8B5B;\" id=\"area-1-features\" aria-expanded=\"false\">\r\n\t\t\t\t<li class=\"feature\" id=\"feature-1\">\r\n\t\t\t\t\t<h3 id=\"vertical-align: top !important;\"><span class=\"feature badge-distro\" id=\"feature-1-badge-distro\" data-toggle=\"collapse\" href=\"#feature-1-stats\" aria-expanded=\"false\" aria-controls=\"feature-1-stats\"  title=\"Scenarios\"><span class=\"feature badge badge-pill pointer total badge-success\" id=\"feature-1-badge\">1<\/span><span class=\"feature distro pointer\" id=\"feature-1-distro\"><div class=\"distro bg-success\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n<span class=\"feature-statement-link badge pointer badge-secondary\" id=\"feature-1-statement-link\" data-toggle=\"collapse\" href=\"#feature-1-statement\" aria-expanded=\"false\" aria-controls=\"feature-1-statement\"><span class=\"oi oi-info\" aria-hidden=\"true\"><\/span><\/span>\t\t\t\t\t\t<span class=\"name pointer\" data-toggle=\"collapse\" href=\"#feature-1-scenarios\" aria-expanded=\"false\" aria-controls=\"feature-1-scenarios\" >My Feature<\/span>\r\n\t\t\t\t\t\t<span class=\"feature duration\"> [3 ms]<\/span>\r\n\t\t\t\t\t<\/h3>\r\n\t\t\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"feature-1-stats\">\r\n\t\t\t\t\t\t<tr id=\"feature-1-scenario-stats\">\r\n\t\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t<div class=\"output collapse\" id=\"feature-1-statement\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t<pre class=\"feature-statement bg-light rounded\" id=\"feature-1-statement\">As a sample user\r\nYou can have my feature value\r\nBy execute my feature<\/pre>\r\n<\/div>\r\n\t\t\t\t\t<ol class=\"scenarios list-unstyled collapse\" style=\"border-left: 2px solid #5A8B5B;\" id=\"feature-1-scenarios\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t<li class=\"scenario passed\" id=\"scenario-1\">\r\n\t\t\t\t\t\t\t<h4 class=\"panel-heading\" data-toggle=\"collapse\" href=\"#scenario-1-steps\" aria-expanded=\"false\" aria-controls=\"scenario-1-steps\" >\t\t\t\t\t\t\t\t<span class=\"scenario badge pointer total badge-success\" title=\"Steps\">4<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"name pointer\">My Scenario<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"scenario duration\"> [3 ms]<\/span>\r\n\t\t\t\t\t\t\t<\/h4>\r\n\t\t\t\t\t\t\t<ol class=\"steps list-unstyled collapse\" id=\"scenario-1-steps\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<li id=\"step-1\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-1-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Given my step 1<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-2\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-2-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">When my step 2 with multiline input<\/span>\r\n<a class=\"step-input-link\" data-toggle=\"collapse\" href=\"#step-2-input\" aria-expanded=\"false\" aria-controls=\"step-2-input\"> [Input]<\/a><span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t\t<div class=\"input collapse\" id=\"step-2-input\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"input title\" id=\"step-2-input-title\">\r\nInput\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t<pre class=\"input prettyprint linenums rounded lang-text\" id=\"input-2\">Here \r\nis \r\nmy \r\nInput!<\/pre>\r\n<\/div>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-3\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-3-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">And my step 3 with an explanation<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-4\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step passed badge-success\" id=\"step-4-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Then my step 3 with output<\/span>\r\n<a class=\"step-output-link\" data-toggle=\"collapse\" href=\"#step-4-output\" aria-expanded=\"false\" aria-controls=\"step-4-output\"> [Output]<\/a><span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t\t<div class=\"output collapse\" id=\"step-4-output\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"output title\" id=\"step-4-output-title\">\r\nOutput\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t<pre class=\"output prettyprint linenums rounded lang-text\" id=\"output-4\">Here is my output.<\/pre>\r\n<\/div>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t<\/ol>\r\n\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t<\/ol>\r\n\t\t\t\t<\/li>\r\n\t\t\t<\/ol>\r\n\t\t<\/li>\r\n\t\t<li class=\"area\" id=\"area-2\">\r\n\t\t\t<h2><span class=\"area badge-distro\" id=\"area-2-badge-distro\" data-toggle=\"collapse\" href=\"#area-2-stats\" aria-expanded=\"false\" aria-controls=\"area-2-stats\"  title=\"Scenarios\"><span class=\"area badge badge-pill pointer total badge-warning\" id=\"area-2-badge\">1<\/span><span class=\"area distro pointer\" id=\"area-2-distro\"><div class=\"distro bg-warning\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n\t\t\t\t<span class=\"name pointer\" id=\"area-2-name\" data-toggle=\"collapse\" href=\"#area-2-features\" aria-expanded=\"false\" aria-controls=\"area-2-features\" >My Imported Area 1<\/span>\r\n\t\t\t\t<span class=\"area reason\"> [Ready]<\/span>\r\n\t\t\t\t<span class=\"area duration\"> [4 ms]<\/span>\r\n\t\t\t<\/h2>\r\n\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"area-2-stats\">\r\n\t\t\t\t\t<tr id=\"report-features-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Features<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr id=\"report-scenarios-stats\">\r\n\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/table>\r\n\t\t\t<ol class=\"features list-unstyled collapse\" style=\"border-left: 2px solid #917545;\" id=\"area-2-features\" aria-expanded=\"false\">\r\n\t\t\t\t<li class=\"feature\" id=\"feature-2\">\r\n\t\t\t\t\t<h3 id=\"vertical-align: top !important;\"><span class=\"feature badge-distro\" id=\"feature-2-badge-distro\" data-toggle=\"collapse\" href=\"#feature-2-stats\" aria-expanded=\"false\" aria-controls=\"feature-2-stats\"  title=\"Scenarios\"><span class=\"feature badge badge-pill pointer total badge-warning\" id=\"feature-2-badge\">1<\/span><span class=\"feature distro pointer\" id=\"feature-2-distro\"><div class=\"distro bg-warning\" style=\"height: 100%; width: 100%; border-top-right-radius: .25em; border-bottom-right-radius: .25em;\"><\/div><\/span>\r\n<\/span>\r\n\t\t\t\t\t\t<span class=\"name pointer\" data-toggle=\"collapse\" href=\"#feature-2-scenarios\" aria-expanded=\"false\" aria-controls=\"feature-2-scenarios\" >My Imported Feature<\/span>\r\n\t\t\t\t\t\t<span class=\"feature reason\"> [Ready]<\/span>\r\n\t\t\t\t\t\t<span class=\"feature duration\"> [4 ms]<\/span>\r\n\t\t\t\t\t<\/h3>\r\n\t\t\t\t\t<table class=\"table table-condensed collapse\" style=\"width: 100%; empty-cells: show;\" id=\"feature-2-stats\">\r\n\t\t\t\t\t\t<tr id=\"feature-2-scenario-stats\">\r\n\t\t\t\t\t\t\t<td class=\"stats-label text-muted text-right\" style=\"width: 0%; padding-left: 0px !important;\">Scenarios<\/td>\r\n\t\t\t\t\t\t\t<td class=\"passed success text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"skipped warning text-center\" style=\"width: 3.3333333333333%;\">1<\/td>\r\n\t\t\t\t\t\t\t<td class=\"failed danger text-center\" style=\"width: 3.3333333333333%;\">0<\/td>\r\n\t\t\t\t\t\t\t<td class=\"outcome-bar-chart\" style=\"width: 90%;\">\r\n\t\t\t\t\t<table class=\"table\" style=\"width: 100%; empty-cells: show; height: 14px;\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"bar passed-bar bg-success text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar skipped-bar bg-warning text-center\" style=\"width: 100%\"><\/td>\r\n\t\t\t\t\t\t\t<td class=\"bar failed-bar bg-danger text-center\" style=\"width: 0%\"><\/td>\r\n\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/table>\r\n\t\t\t\t\t<ol class=\"scenarios list-unstyled collapse\" style=\"border-left: 2px solid #917545;\" id=\"feature-2-scenarios\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t<li class=\"scenario skipped\" id=\"scenario-2\">\r\n\t\t\t\t\t\t\t<h4 class=\"panel-heading\" data-toggle=\"collapse\" href=\"#scenario-2-steps\" aria-expanded=\"false\" aria-controls=\"scenario-2-steps\" >\t\t\t\t\t\t\t\t<span class=\"scenario badge pointer total badge-warning\" title=\"Steps\">6<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"name pointer\">My Imported Scenario<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"scenario reason\"> [Ready]<\/span>\r\n\t\t\t\t\t\t\t\t<span class=\"scenario duration\"> [4 ms]<\/span>\r\n\t\t\t\t\t\t\t<\/h4>\r\n\t\t\t\t\t\t\t<ol class=\"steps list-unstyled collapse\" id=\"scenario-2-steps\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<li id=\"step-5\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-5-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Given you have the xbdd tools installed<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-6\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-6-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">And you have an xBDDFeatureImport.txt file defined in the root of the project<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-7\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-7-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">When you execute &#39;dotnet xbdd project generate MSTest&#39;<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-8\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-8-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">Then a new feature will be defined in the project with two partial class files<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-9\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-9-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">And you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<li id=\"step-10\">\r\n\t\t\t\t\t\t\t\t\t<h5>\t\t\t\t\t\t\t\t\t\t<span class=\"step badge pointer total badge-pill step skipped badge-warning\" id=\"step-10-badge\"> <\/span>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"name\">And you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature<\/span>\r\n<span class=\"step duration\"> [0 ms]<\/span>\r\n<\/h5>\r\n\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t<\/ol>\r\n\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t<\/ol>\r\n\t\t\t\t<\/li>\r\n\t\t\t<\/ol>\r\n\t\t<\/li>\r\n\t<\/ol>\r\n    <script src=\"https:\/\/code.jquery.com\/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i\/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/popper.js\/1.14.3\/umd\/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK\/l8WvCWPIPm49\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.1.3\/js\/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW\/JmZQ5stwEULTy\" crossorigin=\"anonymous\"><\/script>\r\n    <script src=\"https:\/\/cdn.rawgit.com\/google\/code-prettify\/master\/loader\/run_prettify.js\"><\/script>\r\n    <script language=\"javascript\" type=\"text\/javascript\">function resizeIframe(obj) { obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px'; }<\/script>\r\n<\/body>\r\n<\/html>","OutputFormat":16,"StartTime":"\/Date(1536406045378-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045379-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.json","InputFormat":27,"Name":"you will find a JSON Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.json'.","Outcome":1,"Output":"{\"Areas\":[{\"Features\":[{\"Assignments\":[],\"FullClassName\":\"MyGeneratedSample.Features.MyImportedArea1.MyImportedFeature\",\"Name\":\"My Imported Feature\",\"Reason\":\"Ready\",\"Scenarios\":[{\"Assignments\":[],\"MethodName\":\"MyImportedScenario\",\"Name\":\"My Imported Scenario\",\"Outcome\":3,\"Reason\":\"Ready\",\"Sort\":1000,\"Steps\":[{\"EndTime\":\"\\\/Date(1536406044981-0400)\\\/\",\"Input\":\"\",\"Name\":\"you have the xbdd tools installed\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044981-0400)\\\/\"},{\"ActionType\":3,\"EndTime\":\"\\\/Date(1536406044984-0400)\\\/\",\"Input\":\"\",\"Name\":\"you have an xBDDFeatureImport.txt file defined in the root of the project\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044984-0400)\\\/\"},{\"ActionType\":1,\"EndTime\":\"\\\/Date(1536406044984-0400)\\\/\",\"Input\":\"\",\"Name\":\"you execute 'dotnet xbdd project generate MSTest'\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044984-0400)\\\/\"},{\"ActionType\":2,\"EndTime\":\"\\\/Date(1536406044984-0400)\\\/\",\"Input\":\"\",\"Name\":\"a new feature will be defined in the project with two partial class files\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044984-0400)\\\/\"},{\"ActionType\":3,\"EndTime\":\"\\\/Date(1536406044984-0400)\\\/\",\"Input\":\"\",\"Name\":\"you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044984-0400)\\\/\"},{\"ActionType\":3,\"EndTime\":\"\\\/Date(1536406044984-0400)\\\/\",\"Input\":\"\",\"Name\":\"you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature\",\"Outcome\":3,\"Reason\":\"Scenario Skipped\",\"StartTime\":\"\\\/Date(1536406044984-0400)\\\/\"}],\"Tags\":[]}],\"Sort\":1000000,\"Tags\":[]}],\"Name\":\"My Generated Sample - Features - My Imported Area 1\",\"Reason\":\"Ready\"},{\"Features\":[{\"Actor\":\"sample user\",\"Assignments\":[],\"Capability\":\"execute my feature\",\"Explanation\":\"\\r\\n\\t\\t# My Explanation\\r\\n\\t\\tThis is a\\r\\n\\t\\tmultiline explanation of the feature.\\r\\n\\t\\t**And it uses markdown!**\",\"FullClassName\":\"MyGeneratedSample.Features.MyArea.MyFeature\",\"Name\":\"My Feature\",\"Scenarios\":[{\"Assignments\":[],\"Explanation\":\"This is an explanation of the scenario.\",\"MethodName\":\"MyScenario\",\"Name\":\"My Scenario\",\"Outcome\":1,\"Sort\":1,\"Steps\":[{\"EndTime\":\"\\\/Date(1536406045050-0400)\\\/\",\"Input\":\"\",\"Name\":\"my step 1\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406045050-0400)\\\/\"},{\"ActionType\":1,\"EndTime\":\"\\\/Date(1536406045051-0400)\\\/\",\"Input\":\"Here \\r\\nis \\r\\nmy \\r\\nInput!\",\"Name\":\"my step 2 with multiline input\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406045051-0400)\\\/\"},{\"ActionType\":3,\"EndTime\":\"\\\/Date(1536406045051-0400)\\\/\",\"Explanation\":\"\\r\\n\\t\\t\\t\\t\\t\\t# Step 3 Explanation \\r\\n\\t\\t\\t\\t\\t\\tThis is a multiline explanation of \\r\\n\\t\\t\\t\\t\\t\\tStep 3.  It uses markdown.  It will\\r\\n\\t\\t\\t\\t\\t\\tbe printed out along with the step name in the\\r\\n\\t\\t\\t\\t\\t\\thtml report.\",\"Name\":\"my step 3 with an explanation\",\"Outcome\":1,\"StartTime\":\"\\\/Date(1536406045051-0400)\\\/\"},{\"ActionType\":2,\"EndTime\":\"\\\/Date(1536406045051-0400)\\\/\",\"Input\":\"\",\"Name\":\"my step 3 with output\",\"Outcome\":1,\"Output\":\"Here is my output.\",\"StartTime\":\"\\\/Date(1536406045051-0400)\\\/\"}],\"Tags\":[]}],\"Sort\":1,\"Tags\":[],\"Value\":\"have my feature value\"}],\"Name\":\"My Generated Sample - Features - My Area\"}],\"Name\":\"My Generated Sample - Features\",\"Reason\":\"Ready\"}","OutputFormat":18,"StartTime":"\/Date(1536406045379-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045379-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.txt","InputFormat":27,"Name":"you will find a Text Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.txt'.","Outcome":1,"Output":"My Generated Sample - Features\r\n\r\nMy Generated Sample - Features - My Area\r\n\tMy Feature\r\n\t\tMy Scenario\r\n\t\t\tGiven my step 1\r\n\t\t\tWhen my step 2 with multiline input\r\n\t\t\t\tHere \r\n\t\t\t\tis \r\n\t\t\t\tmy \r\n\t\t\t\tInput!\r\n\t\t\tAnd my step 3 with an explanation\r\n\t\t\tThen my step 3 with output\r\nMy Generated Sample - Features - My Imported Area 1 [Ready]\r\n\tMy Imported Feature [Ready]\r\n\t\tMy Imported Scenario [Ready]\r\n\t\t\tGiven you have the xbdd tools installed\r\n\t\t\tAnd you have an xBDDFeatureImport.txt file defined in the root of the project\r\n\t\t\tWhen you execute 'dotnet xbdd project generate MSTest'\r\n\t\t\tThen a new feature will be defined in the project with two partial class files\r\n\t\t\tAnd you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\r\n\t\t\tAnd you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature\r\n","StartTime":"\/Date(1536406045379-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045380-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.Outline.txt","InputFormat":27,"Name":"you will find a Text Outline Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.Outline.txt'.","Outcome":1,"Output":"My Generated Sample - Features\r\n\r\nMy Generated Sample - Features - My Area\r\n\tMy Feature\r\n\t\tMy Scenario\r\n\t\t\tGiven my step 1\r\n\t\t\tWhen my step 2 with multiline input\r\n\t\t\t\tHere \r\n\t\t\t\tis \r\n\t\t\t\tmy \r\n\t\t\t\tInput!\r\n\t\t\tAnd my step 3 with an explanation\r\n\t\t\tThen my step 3 with output\r\nMy Generated Sample - Features - My Imported Area 1 [Ready]\r\n\tMy Imported Feature [Ready]\r\n\t\tMy Imported Scenario [Ready]\r\n\t\t\tGiven you have the xbdd tools installed\r\n\t\t\tAnd you have an xBDDFeatureImport.txt file defined in the root of the project\r\n\t\t\tWhen you execute 'dotnet xbdd project generate MSTest'\r\n\t\t\tThen a new feature will be defined in the project with two partial class files\r\n\t\t\tAnd you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\r\n\t\t\tAnd you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature\r\n","StartTime":"\/Date(1536406045379-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045380-0400)\/","Input":".\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.opml","InputFormat":27,"Name":"you will find a OPML Outline Report file located at '.\/MyGeneratedSample.Features\/test-results\/MyGeneratedSample.Features.Results.opml'.","Outcome":1,"Output":"<?xml version=\"1.0\"?>\r\n<opml version=\"2.0\">\r\n<head>\r\n<\/head>\r\n<body>\r\n\r\n<outline text=\"My Generated Sample - Features - My Area\">\r\n\t<outline text=\"My Feature\">\r\n\t\t<outline text=\"My Scenario\">\r\n\t\t\t<outline text=\"Given my step 1\"\/>\r\n\t\t\t<outline text=\"When my step 2 with multiline input\">\r\n\t\t\t\t<outline text=\"Here \" \/>\r\n\t\t\t\t<outline text=\"is \" \/>\r\n\t\t\t\t<outline text=\"my \" \/>\r\n\t\t\t\t<outline text=\"Input!\" \/>\r\n\t\t\t<\/outline>\r\n\t\t\t<outline text=\"And my step 3 with an explanation\"\/>\r\n\t\t\t<outline text=\"Then my step 3 with output\"\/>\r\n\t\t<\/outline>\r\n\t<\/outline>\r\n<\/outline>\r\n<outline text=\"My Generated Sample - Features - My Imported Area 1 [Ready]\">\r\n\t<outline text=\"My Imported Feature [Ready]\">\r\n\t\t<outline text=\"My Imported Scenario [Ready]\">\r\n\t\t\t<outline text=\"Given you have the xbdd tools installed\"\/>\r\n\t\t\t<outline text=\"And you have an xBDDFeatureImport.txt file defined in the root of the project\"\/>\r\n\t\t\t<outline text=\"When you execute 'dotnet xbdd project generate MSTest'\"\/>\r\n\t\t\t<outline text=\"Then a new feature will be defined in the project with two partial class files\"\/>\r\n\t\t\t<outline text=\"And you can finish the import by moving the scenarios from the feature.xbdd.cs file to the feature.cs file\"\/>\r\n\t\t\t<outline text=\"And you can delete the .xbdd.cs file and clear out the xBDDFeatureImport.txt file of the feature\"\/>\r\n\t\t<\/outline>\r\n\t<\/outline>\r\n<\/outline>\r\n<\/body>\r\n<\/opml>\r\n","OutputFormat":29,"StartTime":"\/Date(1536406045380-0400)\/"}],"Tags":[]},{"Assignments":["Stewart"],"Explanation":"You can specify the value of testrun name setting in the `xBDDConfig.json` file through a `--testrun-name` option for the xbdd xbddToolsCommandArgs.  The default value is the name of the project folder.","MethodName":"WithATestRunName","Name":"With A Test Run Name","Outcome":1,"Sort":1003,"Steps":[{"EndTime":"\/Date(1536406045400-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045382-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045417-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest --testrun-name My Sample Test Run","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045400-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045417-0400)\/","Input":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Sample Test Run\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"My Generated Sample - Features - \",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","InputFormat":18,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDConfig.json' that matches the template:","Outcome":1,"Output":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Sample Test Run\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"My Generated Sample - Features - \",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","OutputFormat":18,"StartTime":"\/Date(1536406045417-0400)\/"}],"Tags":[]},{"Assignments":["Stewart"],"Explanation":"You can specify the value of 'remove from area name' setting in the `xBDDConfig.json` file through a `--remove-from-area-name` option for the xbdd xbddToolsCommandArgs.  The default value is the name of the project folder with '.' replaced by ' - '.","MethodName":"WithAreaNameClipping","Name":"With Area Name Clipping","Outcome":1,"Sort":1004,"Steps":[{"EndTime":"\/Date(1536406045424-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045419-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045436-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest --remove-from-area-name Modified","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045424-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045436-0400)\/","Input":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Generated Sample - Features\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"Modified\",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","InputFormat":18,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/xBDDConfig.json' that matches the template:","Outcome":1,"Output":"{\r\n\t\"xBDD\": {\r\n\t\t\"TestRunName\": \"My Generated Sample - Features\",\r\n\t\t\"Browser\": {\r\n\t\t\t\"Watch\": \"false\"\r\n\t\t},\r\n\t\t\"HtmlReport\": {\r\n\t\t\t\"RemoveFromAreaNameStart\": \"Modified\",\r\n\t\t\t\"FailuresOnly\": \"false\"\r\n\t\t}\r\n\t}\r\n}","OutputFormat":18,"StartTime":"\/Date(1536406045436-0400)\/"}],"Tags":[]}],"Sort":1,"Tags":["Something","SomethingElse"],"Value":"generate a new MS Test Project"}],"Name":"xBDD - Features - Generating Code - Generating Project Files"},{"Features":[{"Actor":"Developer","Assignments":[],"Capability":"executing the 'dotnet xbdd project generate MSTest' command in a directory that has an xBDDFeatureImport.txt file","FullClassName":"xBDD.Features.GeneratingCode.GeneratingFeatureFiles.UsingAnXbddFeatureImportFile.ForAnMSTestProject","Name":"For An MS Test Project","Scenarios":[{"Assignments":[],"MethodName":"WithAnEmptyScenario","Name":"With An Empty Scenario","Outcome":1,"Sort":100,"Steps":[{"EndTime":"\/Date(1536406045447-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045440-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045447-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045447-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045458-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045447-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045459-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045458-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAGivenStep","Name":"With A Given Step","Outcome":1,"Sort":200,"Steps":[{"EndTime":"\/Date(1536406045465-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045460-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045466-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045465-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045477-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045466-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045477-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045477-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAGivenStepWithQuotes","Name":"With A Given Step With Quotes","Outcome":1,"Sort":200,"Steps":[{"EndTime":"\/Date(1536406045484-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045479-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045485-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven \"My\" Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045484-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045500-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045485-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045500-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"\\\"My\\\" Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"\\\"My\\\" Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045500-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAWhenStep","Name":"With A When Step","Outcome":1,"Sort":300,"Steps":[{"EndTime":"\/Date(1536406045517-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045502-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045518-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\tWhen Step 2","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045517-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045545-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045518-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045545-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045545-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAThenStep","Name":"With A Then Step","Outcome":1,"Sort":400,"Steps":[{"EndTime":"\/Date(1536406045552-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045547-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045553-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\tWhen Step 2\r\n\t\t\tThen Step 3","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045552-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045568-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045553-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045568-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045568-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAnAndStep","Name":"With An And Step","Outcome":1,"Sort":500,"Steps":[{"EndTime":"\/Date(1536406045579-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045570-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045580-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\tWhen Step 2\r\n\t\t\tThen Step 3\r\n\t\t\tAnd Step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045579-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045593-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045580-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045594-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.And(\"Step 4\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.And(\"Step 4\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045593-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithACodeStep","Name":"With A Code Step","Outcome":1,"Sort":600,"Steps":[{"EndTime":"\/Date(1536406045602-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045596-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045603-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\tWhen Step 2\r\n\t\t\tThen Step 3\r\n\t\t\tAnd Step 4\r\n\t\t\t.And(this.IsSomeCode())","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045603-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045617-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045603-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045617-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.And(\"Step 4\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\/\/\t\t\t\t.And(this.IsSomeCode())\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.When(\"Step 2\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Then(\"Step 3\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.And(\"Step 4\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\/\/\t\t\t\t.And(this.IsSomeCode())\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045617-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepInput","Name":"With A Step Input","Outcome":1,"Sort":700,"Steps":[{"EndTime":"\/Date(1536406045631-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045622-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045632-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere Is\r\n\t\t\t\t\tMy Multiline Input","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045631-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045644-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045632-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045645-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\tMy Multiline Input\".RemoveIndentation(6,true),\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\tMy Multiline Input\".RemoveIndentation(6,true),\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045644-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepInputWithQuotes","Name":"With A Step Input With Quotes","Outcome":1,"Sort":700,"Steps":[{"EndTime":"\/Date(1536406045654-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045646-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045657-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere Is\r\n\t\t\t\t\t\"My\" Multiline Input","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045654-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045671-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045657-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045672-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\t\"\"My\"\" Multiline Input\".RemoveIndentation(6,true),\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\t\"\"My\"\" Multiline Input\".RemoveIndentation(6,true),\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045671-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepInputSingleLine","Name":"With A Step Input Single Line","Outcome":1,"Sort":800,"Steps":[{"EndTime":"\/Date(1536406045681-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045674-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045682-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere Is My Single Line Input","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045681-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045695-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045682-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045696-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Here Is My Single Line Input\",\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Here Is My Single Line Input\",\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045695-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepInputSingleLineWithQuotes","Name":"With A Step Input Single Line With Quotes","Outcome":1,"Sort":800,"Steps":[{"EndTime":"\/Date(1536406045707-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045697-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045708-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere Is \"My\" Single Line Input","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045707-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045722-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045708-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045723-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Here Is \\\"My\\\" Single Line Input\",\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Here Is \\\"My\\\" Single Line Input\",\r\n\t\t\t\t\tTextFormat.text)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045722-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepExplanation","Name":"With A Step Explanation","Outcome":1,"Sort":900,"Steps":[{"EndTime":"\/Date(1536406045730-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045724-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045731-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere Is\r\n\t\t\t\t\tMy Multiline Explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045730-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045747-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045731-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045747-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\tMy Multiline Explanation\".RemoveIndentation(6,true))\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\tMy Multiline Explanation\".RemoveIndentation(6,true))\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045747-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepExplanationWithQuotes","Name":"With A Step Explanation With Quotes","Outcome":1,"Sort":910,"Steps":[{"EndTime":"\/Date(1536406045756-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045749-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045758-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere Is\r\n\t\t\t\t\t\"My\" Multiline Explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045756-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045770-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045758-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045770-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\t\"\"My\"\" Multiline Explanation\".RemoveIndentation(6,true))\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t@\"\r\n\t\t\t\t\t\tHere Is\r\n\t\t\t\t\t\t\"\"My\"\" Multiline Explanation\".RemoveIndentation(6,true))\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045770-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepExplanationSingleLine","Name":"With A Step Explanation Single Line","Outcome":1,"Sort":1000,"Steps":[{"EndTime":"\/Date(1536406045778-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045772-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045779-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere Is My Singleline Explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045778-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045794-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045779-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045795-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t\"Here Is My Singleline Explanation\")\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t\"Here Is My Singleline Explanation\")\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045794-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepExplanationSingleLineWithQuotes","Name":"With A Step Explanation Single Line With Quotes","Outcome":1,"Sort":1010,"Steps":[{"EndTime":"\/Date(1536406045803-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045797-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045805-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere Is \"My\" Singleline Explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045803-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045819-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045805-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045819-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t\"Here Is \\\"My\\\" Singleline Explanation\")\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t}, \r\n\t\t\t\t\tnull, \r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t\"Here Is \\\"My\\\" Singleline Explanation\")\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045819-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAStepWithTrailingSpaces","Name":"With A Step With Trailing Spaces","Outcome":1,"Sort":1100,"Steps":[{"EndTime":"\/Date(1536406045831-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045822-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045833-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1           ","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045831-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045848-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045834-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045848-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1           \",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1           \",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045848-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAScenarioExplanation","Name":"With A Scenario Explanation","Outcome":1,"Sort":1200,"Steps":[{"EndTime":"\/Date(1536406045860-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045851-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045861-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tmultiline scenario \r\n\t\t\t\texplanation\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045860-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045875-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045861-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045875-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(@\"\r\n\t\t\tHere is my \r\n\t\t\tmultiline scenario \r\n\t\t\texplanation\",3)]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(@\"\r\n\t\t\tHere is my \r\n\t\t\tmultiline scenario \r\n\t\t\texplanation\",3)]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045875-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAScenarioExplanationWithQuotes","Name":"With A Scenario Explanation With Quotes","Outcome":1,"Sort":1210,"Steps":[{"EndTime":"\/Date(1536406045885-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045877-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045886-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is \"my\" \r\n\t\t\t\tmultiline scenario \r\n\t\t\t\texplanation\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045885-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045901-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045886-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045901-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(@\"\r\n\t\t\tHere is \"\"my\"\" \r\n\t\t\tmultiline scenario \r\n\t\t\texplanation\",3)]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Explanation(@\"\r\n\t\t\tHere is \"\"my\"\" \r\n\t\t\tmultiline scenario \r\n\t\t\texplanation\",3)]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045901-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAScenarioWithTrailingSpaces","Name":"With A Scenario With Trailing Spaces","Outcome":1,"Sort":1300,"Steps":[{"EndTime":"\/Date(1536406045909-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045903-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045911-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1          \r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045909-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045930-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045911-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045930-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045930-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithScenarioReasonTags","Name":"With Scenario Reason Tags","Outcome":1,"Sort":1400,"Steps":[{"EndTime":"\/Date(1536406045937-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045932-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045938-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1 #R-MyReason\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045937-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045952-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045938-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045953-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"MyReason\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"MyReason\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045952-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateScenarioReasonTags","Name":"With Duplicate Scenario Reason Tags","Outcome":1,"Sort":1410,"Steps":[{"EndTime":"\/Date(1536406045961-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045954-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045962-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1 #R-MyReason1 #R-MyReason2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045961-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406045974-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045962-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406045977-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"MyReason1\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"MyReason1\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406045974-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithScenarioOwnerTags","Name":"With Scenario Owner Tags","Outcome":1,"Sort":1500,"Steps":[{"EndTime":"\/Date(1536406045986-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406045978-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406045989-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1 @MyOwner1 @MyOwner2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406045986-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046002-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406045989-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046002-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Assignments(\"MyOwner1\",\"MyOwner2\")]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Assignments(\"MyOwner1\",\"MyOwner2\")]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046002-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithScenarioGeneralTags","Name":"With Scenario General Tags","Outcome":1,"Sort":1510,"Steps":[{"EndTime":"\/Date(1536406046010-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046004-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046011-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1 #T-MyTag1 #T-MyTag2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046010-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046039-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046011-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046041-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Tags(\"MyTag1\",\"MyTag2\")]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\t[Tags(\"MyTag1\",\"MyTag2\")]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046039-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAnExistingFeature","Name":"With An Existing Feature","Outcome":1,"Sort":1600,"Steps":[{"EndTime":"\/Date(1536406046064-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046044-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046066-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046064-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046082-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046066-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046098-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046082-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046099-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046098-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046100-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.xbdd.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046099-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAFeatureExplanation","Name":"With A Feature Explanation","Outcome":1,"Sort":1700,"Steps":[{"EndTime":"\/Date(1536406046112-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046101-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046114-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tmultiline feature \r\n\t\t\texplanation\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046112-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046125-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046114-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046126-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Explanation(@\"\r\n\t\tHere is my \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Explanation(@\"\r\n\t\tHere is my \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046125-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAFeatureExplanationWithQuotes","Name":"With A Feature Explanation With Quotes","Outcome":1,"Sort":1700,"Steps":[{"EndTime":"\/Date(1536406046135-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046129-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046140-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tExplanation\r\n\t\t\tHere is \"my\" \r\n\t\t\tmultiline feature \r\n\t\t\texplanation\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046135-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046164-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046140-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046164-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Explanation(@\"\r\n\t\tHere is \"\"my\"\" \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Explanation(@\"\r\n\t\tHere is \"\"my\"\" \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046164-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAFeatureStatement","Name":"With A Feature Statement","Outcome":1,"Sort":1710,"Steps":[{"EndTime":"\/Date(1536406046175-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046166-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046176-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tmultiline feature \r\n\t\t\texplanation\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can derive some value\r\n\t\t\tBy performing some action with the product\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046175-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046193-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046176-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046193-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[AsA(\"user\")]\r\n\t[YouCan(\"derive some value\")]\r\n\t[By(\"performing some action with the product\")]\r\n\t[Explanation(@\"\r\n\t\tHere is my \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[AsA(\"user\")]\r\n\t[YouCan(\"derive some value\")]\r\n\t[By(\"performing some action with the product\")]\r\n\t[Explanation(@\"\r\n\t\tHere is my \r\n\t\tmultiline feature \r\n\t\texplanation\",2)]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046193-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAFeatureWithTrailingSpaces","Name":"With A Feature With Trailing Spaces","Outcome":1,"Sort":1800,"Steps":[{"EndTime":"\/Date(1536406046203-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046196-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046204-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1     \r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046203-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046215-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046204-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046216-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046215-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAnAreaWithTrailingSpaces","Name":"With An Area With Trailing Spaces","Outcome":1,"Sort":1900,"Steps":[{"EndTime":"\/Date(1536406046223-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046217-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046223-0400)\/","Input":"My Area 1 - My Sub Area 1     \r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046223-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046234-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046223-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046235-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046234-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithIgnoredFeatureReasonTags","Name":"With Ignored Feature Reason Tags","Outcome":1,"Sort":2000,"Steps":[{"EndTime":"\/Date(1536406046242-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046237-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046243-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1 #R-IgnoredReasonTag\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046242-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046254-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046243-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046255-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046255-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureGeneralTags","Name":"With Feature General Tags","Outcome":1,"Sort":2100,"Steps":[{"EndTime":"\/Date(1536406046262-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046257-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046263-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1 #T-MyFeatureTag #T-MyFeatureTag2\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046262-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046274-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046263-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046274-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Tags(\"MyFeatureTag\",\"MyFeatureTag2\")]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Tags(\"MyFeatureTag\",\"MyFeatureTag2\")]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046274-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureOwnerTags","Name":"With Feature Owner Tags","Outcome":1,"Sort":2200,"Steps":[{"EndTime":"\/Date(1536406046282-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046276-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046283-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1 @MyFeatureOwner1 @MyFeatureOwner2\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046282-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046294-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046283-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046295-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Assignments(\"MyFeatureOwner1\",\"MyFeatureOwner2\")]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\t[Assignments(\"MyFeatureOwner1\",\"MyFeatureOwner2\")]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046294-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithIgnoredAreaTags","Name":"With Ignored Area Tags","Outcome":1,"Sort":2300,"Steps":[{"EndTime":"\/Date(1536406046303-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046296-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046304-0400)\/","Input":"My Area 1 - My Sub Area 1 #R-Ignored #T-Ignored @Ignored\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046303-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046316-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046304-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046317-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046316-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAWorkflowyTextExport","Name":"With A Workflowy Text Export","Outcome":1,"Sort":2400,"Steps":[{"EndTime":"\/Date(1536406046323-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046318-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046324-0400)\/","Input":"- My Area 1 - My Sub Area 1\r\n  - My Feature 1\r\n    - My Scenario 1\r\n      - Given Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046323-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046335-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046324-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046335-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046335-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateAreaAndFeature","Name":"With Duplicate Area And Feature","Outcome":1,"Sort":2500,"Steps":[{"EndTime":"\/Date(1536406046344-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046339-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046345-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\nMy Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046344-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046356-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046345-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046356-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046356-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateAreaAndFeatureNonconsecutive","Name":"With Duplicate Area And Feature Nonconsecutive","Outcome":1,"Sort":2510,"Steps":[{"EndTime":"\/Date(1536406046365-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046358-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046365-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\nMy Area 2 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\nMy Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046365-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046380-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046365-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046381-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046380-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateArea","Name":"With Duplicate Area","Outcome":1,"Sort":2600,"Steps":[{"EndTime":"\/Date(1536406046393-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046382-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046394-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 0\r\n\t\tMy Scenario 1\r\nMy Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046393-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046405-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046394-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046406-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046405-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateFeature","Name":"With Duplicate Feature","Outcome":1,"Sort":2700,"Steps":[{"EndTime":"\/Date(1536406046418-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046408-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046419-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046418-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046430-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046419-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046431-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046430-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateFeatureNonconsecutive","Name":"With Duplicate Feature Nonconsecutive","Outcome":1,"Sort":2800,"Steps":[{"EndTime":"\/Date(1536406046440-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046433-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046441-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\tMy Feature 2\r\n\t\tMy Scenario 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 2\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046440-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046455-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046441-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046455-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046455-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateScenario","Name":"With Duplicate Scenario","Outcome":1,"Sort":2900,"Steps":[{"EndTime":"\/Date(1536406046464-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046457-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046465-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046464-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046478-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046465-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046479-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 2000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 2000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046478-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithDuplicateScenarioNonconsecutive","Name":"With Duplicate Scenario Nonconsecutive","Outcome":1,"Sort":3000,"Steps":[{"EndTime":"\/Date(1536406046486-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046481-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046486-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tMy Feature 1\r\n\t\tMy Scenario 1\r\n\t\tMy Scenario 2\r\n\t\tMy Scenario 1\r\n\t\t\tGiven Step 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046486-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046499-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nProject initialized.\r\n","StartTime":"\/Date(1536406046487-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046500-0400)\/","Input":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 2000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 3000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","InputFormat":6,"Name":"you will find a file at '.\/MyGeneratedSample.Features\/Features\/MyArea1\/MySubArea1\/MyFeature1.cs' that matches the template:","Outcome":1,"Output":"namespace MyGeneratedSample.Features.MyArea1.MySubArea1\r\n{\r\n\tusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\n\tusing System;\r\n\tusing System.Threading.Tasks;\r\n\tusing xBDD;\r\n\tusing xBDD.Utility;\r\n\r\n\t[TestClass]\r\n\tpublic partial class MyFeature1: xBDDFeatureBase\r\n\t{\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 1000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario2()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 2000)\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t\t[TestMethod]\r\n\t\tpublic async Task MyScenario1()\r\n\t\t{\r\n\t\t\tawait xB.AddScenario(this, 3000)\r\n\t\t\t\t.Given(\"Step 1\",\r\n\t\t\t\t\t(s) => { \r\n\t\t\t\t\t\t\/\/ Enter your code here.\r\n\t\t\t\t\t})\r\n\t\t\t\t.Skip(\"Defining\", Assert.Inconclusive);\r\n\t\t}\r\n\r\n\t}\r\n}","OutputFormat":6,"StartTime":"\/Date(1536406046499-0400)\/"}],"Tags":[]}],"Sort":3,"Tags":[],"Value":"generate new feature files for an MS Test Project"},{"Actor":"Developer","Assignments":[],"Capability":"reviewing the detailed error messages in the xBDD tools output","FullClassName":"xBDD.Features.GeneratingCode.GeneratingFeatureFiles.UsingAnXbddFeatureImportFile.WithAnInvalidOutline","Name":"With An Invalid Outline","Scenarios":[{"Assignments":[],"MethodName":"WithInvalidCharactersInAreaName","Name":"With Invalid Characters In Area Name","Outcome":1,"Sort":1,"Steps":[{"EndTime":"\/Date(1536406046510-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046504-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046511-0400)\/","Input":"My Area 1 - My $%^& Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1 #R-Committed @Stewart #T-LoveIT\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1 #R-Committed @Jane #T-HateIT\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046510-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046515-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An area is defined with invalid characters in the name.\r\nLine 1: 'My Area 1 - My $%^& Sub Area 1'\r\nExplanation: An area name must start with a letter and can only contain\r\n             letters, numbers, spaces, underscores, and ' - '.\r\n             The ' - ' string is converted to '.' to define the features \r\n             namespace in the test project.\r\n","StartTime":"\/Date(1536406046511-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046515-0400)\/","Input":"{{.*}}\/rl\r\nError: An area is defined with invalid characters in the name.\r\nLine 1: 'My Area 1 - My $%^& Sub Area 1'\r\nExplanation: An area name must start with a letter and can only contain\r\n             letters, numbers, spaces, underscores, and ' - '.\r\n             The ' - ' string is converted to '.' to define the features \r\n             namespace in the test project.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An area is defined with invalid characters in the name.\r\nLine 1: 'My Area 1 - My $%^& Sub Area 1'\r\nExplanation: An area name must start with a letter and can only contain\r\n             letters, numbers, spaces, underscores, and ' - '.\r\n             The ' - ' string is converted to '.' to define the features \r\n             namespace in the test project.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046515-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidCharactersInFeatureName","Name":"With Invalid Characters In Feature Name","Outcome":1,"Sort":2,"Steps":[{"EndTime":"\/Date(1536406046519-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046517-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046520-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy $%^& Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046519-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046527-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: A feature is defined with invalid characters in the name.\r\nLine 6: 'My $%^& Feature 1'\r\nExplanation: A feature name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","StartTime":"\/Date(1536406046520-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046527-0400)\/","Input":"{{.*}}\/rl\r\nError: A feature is defined with invalid characters in the name.\r\nLine 6: 'My $%^& Feature 1'\r\nExplanation: A feature name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: A feature is defined with invalid characters in the name.\r\nLine 6: 'My $%^& Feature 1'\r\nExplanation: A feature name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046527-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidCharactersInScenarioName","Name":"With Invalid Characters In Scenario Name","Outcome":1,"Sort":3,"Steps":[{"EndTime":"\/Date(1536406046532-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046530-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046532-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1 #R-Committed @Stewart #T-LoveIT\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy $%^& Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046532-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046536-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: A scenario is defined with invalid characters in the name.\r\nLine 15: 'My $%^& Scenario 1'\r\nExplanation: A scenario name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","StartTime":"\/Date(1536406046532-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046536-0400)\/","Input":"{{.*}}\/rl\r\nError: A scenario is defined with invalid characters in the name.\r\nLine 15: 'My $%^& Scenario 1'\r\nExplanation: A scenario name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: A scenario is defined with invalid characters in the name.\r\nLine 15: 'My $%^& Scenario 1'\r\nExplanation: A scenario name must start with a letter and can only contain\r\n             letters, numbers, spaces, and underscores.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046536-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithEmptyFeatureLine","Name":"With Empty Feature Line","Outcome":1,"Sort":4,"Steps":[{"EndTime":"\/Date(1536406046543-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046538-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046544-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\t\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1 #R-Committed @Stewart #T-LoveIT\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046543-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046548-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 6: A feature is defined with no name.\r\n","StartTime":"\/Date(1536406046544-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046548-0400)\/","Input":"{{.*}}\/rl\r\nError: Line 6: A feature is defined with no name.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 6: A feature is defined with no name.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046548-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithEmptyScenarioLine","Name":"With Empty Scenario Line","Outcome":1,"Sort":5,"Steps":[{"EndTime":"\/Date(1536406046551-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046549-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046552-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\t\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046551-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046557-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 15: A scenario is defined with no name.\r\n","StartTime":"\/Date(1536406046552-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046557-0400)\/","Input":"{{.*}}\/rl\r\nError: Line 15: A scenario is defined with no name.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 15: A scenario is defined with no name.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046557-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithEmptyStepLine","Name":"With Empty Step Line","Outcome":1,"Sort":6,"Steps":[{"EndTime":"\/Date(1536406046560-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046558-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046561-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep input\r\n\t\t\tWhen step 2\r\n\t\t\t\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046560-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046565-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 27: A step is defined with no name.\r\n","StartTime":"\/Date(1536406046561-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046565-0400)\/","Input":"{{.*}}\/rl\r\nError: Line 27: A step is defined with no name.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Line 27: A step is defined with no name.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046565-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithStepInputHeaderOnLastLine","Name":"With Step Input Header On Last Line","Outcome":1,"Sort":7,"Steps":[{"EndTime":"\/Date(1536406046568-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046566-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046568-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046568-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046572-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a step input header.\r\nLine 23: ''\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","StartTime":"\/Date(1536406046568-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046572-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a step input header.\r\nLine 23: ''\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a step input header.\r\nLine 23: ''\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046572-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithStepExplanationHeaderOnLastLine","Name":"With Step Explanation Header On Last Line","Outcome":1,"Sort":8,"Steps":[{"EndTime":"\/Date(1536406046575-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046573-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046576-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046575-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046580-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a step explanation header.\r\nLine 20: ''\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046576-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046580-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a step explanation header.\r\nLine 20: ''\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a step explanation header.\r\nLine 20: ''\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046580-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithScenarioExplanationHeaderOnLastLine","Name":"With Scenario Explanation Header On Last Line","Outcome":1,"Sort":9,"Steps":[{"EndTime":"\/Date(1536406046583-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046581-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046583-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046583-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046586-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an scenario explanation header line.\r\nLine 16: ''\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046583-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046587-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following an scenario explanation header line.\r\nLine 16: ''\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an scenario explanation header line.\r\nLine 16: ''\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046587-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureExplanationOnLastLine","Name":"With Feature Explanation On Last Line","Outcome":1,"Sort":10,"Steps":[{"EndTime":"\/Date(1536406046589-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046588-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046590-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046589-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046594-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature explanation line.\r\nLine 13: ''\r\nExplanation: A Feature explanation line can only be followed by another explanation \r\n             line, a feature statement header line or an outdented (2x) scenario line.\r\n","StartTime":"\/Date(1536406046590-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046594-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a feature explanation line.\r\nLine 13: ''\r\nExplanation: A Feature explanation line can only be followed by another explanation \r\n             line, a feature statement header line or an outdented (2x) scenario line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature explanation line.\r\nLine 13: ''\r\nExplanation: A Feature explanation line can only be followed by another explanation \r\n             line, a feature statement header line or an outdented (2x) scenario line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046594-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureExplanationHeaderOnLastLine","Name":"With Feature Explanation Header On Last Line","Outcome":1,"Sort":11,"Steps":[{"EndTime":"\/Date(1536406046597-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046595-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046597-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046597-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046603-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature explanation header line.\r\nLine 11: ''\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046597-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046603-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a feature explanation header line.\r\nLine 11: ''\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature explanation header line.\r\nLine 11: ''\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046603-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureStatementOnLastLine","Name":"With Feature Statement On Last Line","Outcome":1,"Sort":12,"Steps":[{"EndTime":"\/Date(1536406046610-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046605-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046611-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046610-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046614-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature Statement line.\r\nLine 10: ''\r\nExplanation: A feature statement line can only be followed by another statement line, \r\n             a feature explanation header line or an outdented (2x) scenario line.\r\n","StartTime":"\/Date(1536406046611-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046615-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a feature Statement line.\r\nLine 10: ''\r\nExplanation: A feature statement line can only be followed by another statement line, \r\n             a feature explanation header line or an outdented (2x) scenario line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature Statement line.\r\nLine 10: ''\r\nExplanation: A feature statement line can only be followed by another statement line, \r\n             a feature explanation header line or an outdented (2x) scenario line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046614-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureStatementHeaderOnLastLine","Name":"With Feature Statement Header On Last Line","Outcome":1,"Sort":13,"Steps":[{"EndTime":"\/Date(1536406046617-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046616-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046618-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046617-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046622-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature statement header line.\r\nLine 7: ''\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","StartTime":"\/Date(1536406046618-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046622-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following a feature statement header line.\r\nLine 7: ''\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following a feature statement header line.\r\nLine 7: ''\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046622-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithFeatureOnLastLine","Name":"With Feature On Last Line","Outcome":1,"Sort":14,"Steps":[{"EndTime":"\/Date(1536406046625-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046623-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046625-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046625-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046629-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' following a feature line.\r\nLine 6: ''\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","StartTime":"\/Date(1536406046625-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046629-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' following a feature line.\r\nLine 6: ''\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' following a feature line.\r\nLine 6: ''\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046629-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAreaExplanationOnLastLine","Name":"With Area Explanation On Last Line","Outcome":1,"Sort":15,"Steps":[{"EndTime":"\/Date(1536406046631-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046630-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046632-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046631-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046637-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area explanation line.\r\nLine 4: ''\r\nExplanation: An area explanation line can only be followed by another explanation line \r\n             or an outdented (2x) feature line.\r\n","StartTime":"\/Date(1536406046632-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046637-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following an area explanation line.\r\nLine 4: ''\r\nExplanation: An area explanation line can only be followed by another explanation line \r\n             or an outdented (2x) feature line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area explanation line.\r\nLine 4: ''\r\nExplanation: An area explanation line can only be followed by another explanation line \r\n             or an outdented (2x) feature line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046637-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAreaExplanationHeaderOnLastLine","Name":"With Area Explanation Header On Last Line","Outcome":1,"Sort":16,"Steps":[{"EndTime":"\/Date(1536406046640-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046638-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046641-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046640-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046644-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area explanation header line.\r\nLine 2: ''\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046641-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046644-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following an area explanation header line.\r\nLine 2: ''\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area explanation header line.\r\nLine 2: ''\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046644-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithAreaOnLastLine","Name":"With Area On Last Line","Outcome":1,"Sort":17,"Steps":[{"EndTime":"\/Date(1536406046647-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046645-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046647-0400)\/","Input":"My Area 1 - My Sub Area 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046647-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046651-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area line.\r\nLine 1: ''\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","StartTime":"\/Date(1536406046647-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046651-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'No Line' is following an area line.\r\nLine 1: ''\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'No Line' is following an area line.\r\nLine 1: ''\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046651-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithNoLines","Name":"With No Lines","Outcome":1,"Sort":18,"Steps":[{"EndTime":"\/Date(1536406046655-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046652-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046655-0400)\/","Input":"","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046655-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046658-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: The file is empty.\r\n","StartTime":"\/Date(1536406046655-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046658-0400)\/","Input":"{{.*}}\/rl\r\nError: The file is empty.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: The file is empty.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046658-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterStepInputHeader","Name":"With Invalid Line After Step Input Header","Outcome":1,"Sort":19,"Steps":[{"EndTime":"\/Date(1536406046662-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046660-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046662-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\t\tHere is my \r\n\t\t\t\t\tstep explanation\r\n\t\t\t\tInput\r\n\t\t\tWhen step 2 Is Invalid Line\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046662-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046667-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Step' is following a step input header.\r\nLine 24: '\t\t\tWhen step 2 Is Invalid Line'\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","StartTime":"\/Date(1536406046662-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046668-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Step' is following a step input header.\r\nLine 24: '\t\t\tWhen step 2 Is Invalid Line'\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Step' is following a step input header.\r\nLine 24: '\t\t\tWhen step 2 Is Invalid Line'\r\nExplanation: A step input header line can only be followed by an indented input line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046668-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterStepExplanationHeader","Name":"With Invalid Line After Step Explanation Header","Outcome":1,"Sort":20,"Steps":[{"EndTime":"\/Date(1536406046671-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046669-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046672-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tExplanation\r\n\t\t\t\tInput\r\n\t\t\t\t\tHere is the\r\n\t\t\t\t\tStep input \r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046671-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046677-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'StepInputHeader' is following a step explanation header.\r\nLine 21: '\t\t\t\tInput'\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046672-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046677-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'StepInputHeader' is following a step explanation header.\r\nLine 21: '\t\t\t\tInput'\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'StepInputHeader' is following a step explanation header.\r\nLine 21: '\t\t\t\tInput'\r\nExplanation: A step explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046677-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterStep","Name":"With Invalid Line After Step","Outcome":1,"Sort":21,"Steps":[{"EndTime":"\/Date(1536406046682-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046680-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046683-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\t\tInvalid Line\r\n\t\t\tWhen step 2\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046682-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046687-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Unknown' is following a step line.\r\nLine 20: '\t\t\t\tInvalid Line'\r\nExplanation: A step line can only be followed by another step line or an indented \r\n             'Explanation' or 'Input' header line, or outdented scenario, feature, or \r\n             area.\r\n","StartTime":"\/Date(1536406046683-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046687-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Unknown' is following a step line.\r\nLine 20: '\t\t\t\tInvalid Line'\r\nExplanation: A step line can only be followed by another step line or an indented \r\n             'Explanation' or 'Input' header line, or outdented scenario, feature, or \r\n             area.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Unknown' is following a step line.\r\nLine 20: '\t\t\t\tInvalid Line'\r\nExplanation: A step line can only be followed by another step line or an indented \r\n             'Explanation' or 'Input' header line, or outdented scenario, feature, or \r\n             area.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046687-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidStepLineAfterStep","Name":"With Invalid Step Line After Step","Outcome":1,"Sort":22,"Steps":[{"EndTime":"\/Date(1536406046690-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046688-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046692-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\t\tHere is my \r\n\t\t\t\tscenario explanation\r\n\t\t\tGiven step 1\r\n\t\t\tInvalid Line\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046690-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046696-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Invalid step starter.\r\nLine 20: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","StartTime":"\/Date(1536406046692-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046696-0400)\/","Input":"{{.*}}\/rl\r\nError: Invalid step starter.\r\nLine 20: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Invalid step starter.\r\nLine 20: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046696-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterScenarioExplanationHeader","Name":"With Invalid Line After Scenario Explanation Header","Outcome":1,"Sort":23,"Steps":[{"EndTime":"\/Date(1536406046699-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046697-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046699-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tExplanation\r\n\t\t\tGiven step 1\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046699-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046703-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Step' is following an scenario explanation header line.\r\nLine 17: '\t\t\tGiven step 1'\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046699-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046703-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Step' is following an scenario explanation header line.\r\nLine 17: '\t\t\tGiven step 1'\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Step' is following an scenario explanation header line.\r\nLine 17: '\t\t\tGiven step 1'\r\nExplanation: A scenario explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046703-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterScenario","Name":"With Invalid Line After Scenario","Outcome":1,"Sort":24,"Steps":[{"EndTime":"\/Date(1536406046706-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046704-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046707-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\tInvalid Line\r\n\t\t\tGiven step 1\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046706-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046711-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Invalid step starter.\r\nLine 16: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","StartTime":"\/Date(1536406046707-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046711-0400)\/","Input":"{{.*}}\/rl\r\nError: Invalid step starter.\r\nLine 16: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: Invalid step starter.\r\nLine 16: 'Invalid Line'\r\nExplanation: A step can start with either 'Given', 'When', 'Then', 'And', or '.'\r\n             Steps that start with '.' will have it's text interpreted as literal code \r\n             when generating feature classes.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046711-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidIndentedStepLineAfterScenario","Name":"With Invalid Indented Step Line After Scenario","Outcome":1,"Sort":25,"Steps":[{"EndTime":"\/Date(1536406046714-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046712-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046714-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\t\tHere is my \r\n\t\t\tfeature explanation\r\n\r\n\t\tMy Scenario 1\r\n\t\t\t\tGiven step 1\r\n\t\t\tThen step 3\r\n\t\t\tAnd step 4","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046714-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046718-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Unknown' is following a scenario line.\r\nLine 16: '\t\t\t\tGiven step 1'\r\nExplanation: A scenario line can only be followed by another scenario line, an indented\r\n             'Explanation' header or indented step line, or an outdented feature or \r\n             area line.\r\n","StartTime":"\/Date(1536406046714-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046718-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Unknown' is following a scenario line.\r\nLine 16: '\t\t\t\tGiven step 1'\r\nExplanation: A scenario line can only be followed by another scenario line, an indented\r\n             'Explanation' header or indented step line, or an outdented feature or \r\n             area line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Unknown' is following a scenario line.\r\nLine 16: '\t\t\t\tGiven step 1'\r\nExplanation: A scenario line can only be followed by another scenario line, an indented\r\n             'Explanation' header or indented step line, or an outdented feature or \r\n             area line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046718-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterFeatureExplanationHeader","Name":"With Invalid Line After Feature Explanation Header","Outcome":1,"Sort":26,"Steps":[{"EndTime":"\/Date(1536406046721-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046719-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046722-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\t\tAs a user\r\n\t\t\tYou can get some value\r\n\t\t\tBy doing something\r\n\t\tExplanation\r\n\t\tMy Scenario 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046721-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046726-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following a feature explanation header line.\r\nLine 11: '\t\tMy Scenario 1'\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046722-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046726-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Scenario' is following a feature explanation header line.\r\nLine 11: '\t\tMy Scenario 1'\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following a feature explanation header line.\r\nLine 11: '\t\tMy Scenario 1'\r\nExplanation: A feature explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046726-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterFeatureStatementHeader","Name":"With Invalid Line After Feature Statement Header","Outcome":1,"Sort":27,"Steps":[{"EndTime":"\/Date(1536406046729-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046727-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046730-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\tMy Feature 1\r\n\t\tStatement\r\n\t\tMy Scenario 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046729-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046733-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following a feature statement header line.\r\nLine 7: '\t\tMy Scenario 1'\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","StartTime":"\/Date(1536406046730-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046733-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Scenario' is following a feature statement header line.\r\nLine 7: '\t\tMy Scenario 1'\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following a feature statement header line.\r\nLine 7: '\t\tMy Scenario 1'\r\nExplanation: A feature statement header line can only be followed by an indented \r\n             statement line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046733-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterFeature","Name":"With Invalid Line After Feature","Outcome":1,"Sort":28,"Steps":[{"EndTime":"\/Date(1536406046736-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046734-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046737-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\t\tHere is \r\n\t\tmy explanation\r\n\tMy Feature 1\r\n\tMy Feature 2\r\n\t\tMy Scenario 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046736-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046741-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Feature' following a feature line.\r\nLine 6: '\tMy Feature 2'\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","StartTime":"\/Date(1536406046737-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046741-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Feature' following a feature line.\r\nLine 6: '\tMy Feature 2'\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Feature' following a feature line.\r\nLine 6: '\tMy Feature 2'\r\nExplanation: A feature line can only be followed by an indented scenario name, indented\r\n             'Explanation' header or indented 'Statement' header.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046741-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterAreaExplanationHeader","Name":"With Invalid Line After Area Explanation Header","Outcome":1,"Sort":29,"Steps":[{"EndTime":"\/Date(1536406046745-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046742-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046746-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\tExplanation\r\n\tMy Feature 1","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046745-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046751-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Feature' is following an area explanation header line.\r\nLine 3: '\tMy Feature 1'\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","StartTime":"\/Date(1536406046746-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046751-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Feature' is following an area explanation header line.\r\nLine 3: '\tMy Feature 1'\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Feature' is following an area explanation header line.\r\nLine 3: '\tMy Feature 1'\r\nExplanation: An area explanation header line can only be followed by an indented \r\n             explanation line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046751-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidLineAfterArea","Name":"With Invalid Line After Area","Outcome":1,"Sort":30,"Steps":[{"EndTime":"\/Date(1536406046756-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046753-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046757-0400)\/","Input":"My Area 1 - My Sub Area 1\r\nMy Area 1 - My Sub Area 2","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046756-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046761-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Area' is following an area line.\r\nLine 2: 'My Area 1 - My Sub Area 2'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","StartTime":"\/Date(1536406046757-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046761-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Area' is following an area line.\r\nLine 2: 'My Area 1 - My Sub Area 2'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Area' is following an area line.\r\nLine 2: 'My Area 1 - My Sub Area 2'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046761-0400)\/"}],"Tags":[]},{"Assignments":[],"MethodName":"WithInvalidIndentedLineAfterArea","Name":"With Invalid Indented Line After Area","Outcome":1,"Sort":31,"Steps":[{"EndTime":"\/Date(1536406046764-0400)\/","Explanation":"Creates a MySample.Generated folder that will contain the test project files. Deletes all content under the folder if it already exists.","Name":"you have an empty directory","Outcome":1,"StartTime":"\/Date(1536406046762-0400)\/"},{"ActionType":3,"EndTime":"\/Date(1536406046765-0400)\/","Input":"My Area 1 - My Sub Area 1\r\n\t\tInvalid Line","Name":"add a scenario outline file with the following content:","Outcome":1,"StartTime":"\/Date(1536406046764-0400)\/"},{"ActionType":1,"EndTime":"\/Date(1536406046768-0400)\/","Explanation":"Executes the command in powershell.","Input":"dotnet xbdd project generate MSTest","InputFormat":27,"Name":"you run the command:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following an area line.\r\nLine 2: '\t\tInvalid Line'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","StartTime":"\/Date(1536406046765-0400)\/"},{"ActionType":2,"EndTime":"\/Date(1536406046768-0400)\/","Input":"{{.*}}\/rl\r\nError: An invalid line of type 'Scenario' is following an area line.\r\nLine 2: '\t\tInvalid Line'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","Name":"you will see output matching the following template:","Outcome":1,"Output":"Directory: C:\\Users\\stearm01\\source\\xBDD\\xBDD.Features.GeneratingCode\\bin\\Debug\\netcoreapp2.1\\MyGeneratedSample.Features\r\nFolder: MyGeneratedSample.Features\r\nError: An invalid line of type 'Scenario' is following an area line.\r\nLine 2: '\t\tInvalid Line'\r\nExplanation: An area line can only be followed by an indented 'Explanation' header or \r\n             indented Feature line.\r\n","OutputFormat":6,"StartTime":"\/Date(1536406046768-0400)\/"}],"Tags":[]}],"Sort":2,"Tags":[],"Value":"quickly troubleshoot an invalid feature import outline"}],"Name":"xBDD - Features - Generating Code - Generating Feature Files - Using An Xbdd Feature Import File"}],"Name":"xBDD - Generating Code","Reason":"Defining"}