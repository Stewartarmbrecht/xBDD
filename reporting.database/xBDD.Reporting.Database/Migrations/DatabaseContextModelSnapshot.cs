// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using xBDD.Model;
using xBDD.Reporting.Database.Core;

namespace xBDD.Reporting.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("xBDD.Reporting.Database.Core.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaPath");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("FeatureName");

                    b.Property<string>("Name");

                    b.Property<int>("Outcome");

                    b.Property<string>("Reason");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("TestRunId");

                    b.Property<TimeSpan>("Time");

                    b.HasKey("Id");

                    b.HasIndex("TestRunId");

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("xBDD.Reporting.Database.Core.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Exception");

                    b.Property<string>("MultilineParameter");

                    b.Property<string>("Name");

                    b.Property<int>("Outcome");

                    b.Property<string>("Reason");

                    b.Property<int>("ScenarioId");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("ScenarioId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("xBDD.Reporting.Database.Core.TestRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TestRuns");
                });

            modelBuilder.Entity("xBDD.Reporting.Database.Core.Scenario", b =>
                {
                    b.HasOne("xBDD.Reporting.Database.Core.TestRun", "TestRun")
                        .WithMany("TestData")
                        .HasForeignKey("TestRunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("xBDD.Reporting.Database.Core.Step", b =>
                {
                    b.HasOne("xBDD.Reporting.Database.Core.Scenario", "Scenario")
                        .WithMany("Steps")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
